{
    "sourceFile": "src/components/EventCard.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 79,
            "patches": [
                {
                    "date": 1754433393306,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754433564145,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,46 @@\n+import React from \"react\";\n+import Leaflet from \"leaflet\"; // import everything from leaflet\n+import \"leaflet/dist/leaflet.css\"; // import leaflet css\n+\n+const EventCard = ({\n+  id,\n+  title,\n+  description,\n+  startDate,\n+  location,\n+  latitude,\n+  longitude\n+}) => {\n+  // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n+  const WBS = [latitude, longitude];\n+\n+  // create a map object with a center and zoom level\n+  const map = Leaflet.map(\"map\").setView(WBS, 13);\n+\n+  const markerIcon = Leaflet.icon({\n+    iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n+    iconAnchor: [10, 20]\n+  }); // There was an issue with the default marker icon, so we create a new one\n+\n+  Leaflet.marker(WBS, { icon: markerIcon })\n+    .bindPopup(\"My home is here!\") //to show a popup when the marker is clicked\n+    .addTo(map); // add a marker to the map at the WBS coordinates\n+\n+  Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n+    maxZoom: 19,\n+    attribution:\n+      '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n+  }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n+\n+  return (\n+    <div>\n+      <h2>{title}</h2>\n+      <p>{description}</p>\n+      <p>{startDate}</p>\n+      <p>{location}</p>\n+      <div id=\"map\" class=\"h-auto\"></div>\n+    </div>\n+  );\n+};\n+\n+export default EventCard;\n"
                },
                {
                    "date": 1754433726253,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,46 @@\n+import React from \"react\";\n+import Leaflet from \"leaflet\"; // import everything from leaflet\n+import \"leaflet/dist/leaflet.css\"; // import leaflet css\n+\n+const EventCard = ({\n+  id,\n+  title,\n+  description,\n+  startDate,\n+  location,\n+  latitude,\n+  longitude\n+}) => {\n+  // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n+  const WBS = [latitude, longitude];\n+\n+  // create a map object with a center and zoom level\n+  const map = Leaflet.map(\"map\").setView(WBS, 13);\n+\n+  const markerIcon = Leaflet.icon({\n+    iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n+    iconAnchor: [10, 20]\n+  }); // There was an issue with the default marker icon, so we create a new one\n+\n+  Leaflet.marker(WBS, { icon: markerIcon })\n+    .bindPopup(\"My home is here!\") //to show a popup when the marker is clicked\n+    .addTo(map); // add a marker to the map at the WBS coordinates\n+\n+  Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n+    maxZoom: 19,\n+    attribution:\n+      '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n+  }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n+\n+  return (\n+    <div>\n+      <h2>{title}</h2>\n+      <p>{description}</p>\n+      <p>{startDate}</p>\n+      <p>{location}</p>\n+      <div id=\"map\" className=\"h-auto\"></div>\n+    </div>\n+  );\n+};\n+\n+export default EventCard;\n"
                },
                {
                    "date": 1754433818653,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,61 @@\n+import React, { useEffect, useRef } from \"react\";\n+import Leaflet from \"leaflet\"; // import everything from leaflet\n+import \"leaflet/dist/leaflet.css\"; // import leaflet css\n+\n+const EventCard = ({\n+  id,\n+  title,\n+  description,\n+  startDate,\n+  location,\n+  latitude,\n+  longitude\n+}) => {\n+  const mapRef = useRef(null);\n+  const mapInstanceRef = useRef(null);\n+\n+  useEffect(() => {\n+    if (mapRef.current && !mapInstanceRef.current) {\n+      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n+      const WBS = [latitude, longitude];\n+\n+      // create a map object with a center and zoom level\n+      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n+      mapInstanceRef.current = map;\n+\n+      const markerIcon = Leaflet.icon({\n+        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n+        iconAnchor: [10, 20]\n+      }); // There was an issue with the default marker icon, so we create a new one\n+\n+      Leaflet.marker(WBS, { icon: markerIcon })\n+        .bindPopup(\"My home is here!\") //to show a popup when the marker is clicked\n+        .addTo(map); // add a marker to the map at the WBS coordinates\n+\n+      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n+        maxZoom: 19,\n+        attribution:\n+          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n+      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n+    }\n+\n+    return () => {\n+      if (mapInstanceRef.current) {\n+        mapInstanceRef.current.remove();\n+        mapInstanceRef.current = null;\n+      }\n+    };\n+  }, [latitude, longitude]);\n+\n+  return (\n+    <div>\n+      <h2>{title}</h2>\n+      <p>{description}</p>\n+      <p>{startDate}</p>\n+      <p>{location}</p>\n+      <div ref={mapRef} className=\"h-auto\" style={{ height: \"300px\" }}></div>\n+    </div>\n+  );\n+};\n+\n+export default EventCard;\n"
                },
                {
                    "date": 1754433832299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,148 +52,10 @@\n       <h2>{title}</h2>\n       <p>{description}</p>\n       <p>{startDate}</p>\n       <p>{location}</p>\n-      <div ref={mapRef} className=\"h-auto\" style={{ height: \"300px\" }}></div>\n+      <div ref={mapRef} className=\"h-auto\"></div>\n     </div>\n   );\n };\n \n export default EventCard;\n-import React from \"react\";\n-import Leaflet from \"leaflet\"; // import everything from leaflet\n-import \"leaflet/dist/leaflet.css\"; // import leaflet css\n-\n-const EventCard = ({\n-  id,\n-  title,\n-  description,\n-  startDate,\n-  location,\n-  latitude,\n-  longitude\n-}) => {\n-  // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n-  const WBS = [latitude, longitude];\n-\n-  // create a map object with a center and zoom level\n-  const map = Leaflet.map(\"map\").setView(WBS, 13);\n-\n-  const markerIcon = Leaflet.icon({\n-    iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n-    iconAnchor: [10, 20]\n-  }); // There was an issue with the default marker icon, so we create a new one\n-\n-  Leaflet.marker(WBS, { icon: markerIcon })\n-    .bindPopup(\"My home is here!\") //to show a popup when the marker is clicked\n-    .addTo(map); // add a marker to the map at the WBS coordinates\n-\n-  Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n-    maxZoom: 19,\n-    attribution:\n-      '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n-  }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n-\n-  return (\n-    <div>\n-      <h2>{title}</h2>\n-      <p>{description}</p>\n-      <p>{startDate}</p>\n-      <p>{location}</p>\n-      <div id=\"map\" className=\"h-auto\"></div>\n-    </div>\n-  );\n-};\n-\n-export default EventCard;\n-import React from \"react\";\n-import Leaflet from \"leaflet\"; // import everything from leaflet\n-import \"leaflet/dist/leaflet.css\"; // import leaflet css\n-\n-const EventCard = ({\n-  id,\n-  title,\n-  description,\n-  startDate,\n-  location,\n-  latitude,\n-  longitude\n-}) => {\n-  // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n-  const WBS = [latitude, longitude];\n-\n-  // create a map object with a center and zoom level\n-  const map = Leaflet.map(\"map\").setView(WBS, 13);\n-\n-  const markerIcon = Leaflet.icon({\n-    iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n-    iconAnchor: [10, 20]\n-  }); // There was an issue with the default marker icon, so we create a new one\n-\n-  Leaflet.marker(WBS, { icon: markerIcon })\n-    .bindPopup(\"My home is here!\") //to show a popup when the marker is clicked\n-    .addTo(map); // add a marker to the map at the WBS coordinates\n-\n-  Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n-    maxZoom: 19,\n-    attribution:\n-      '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n-  }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n-\n-  return (\n-    <div>\n-      <h2>{title}</h2>\n-      <p>{description}</p>\n-      <p>{startDate}</p>\n-      <p>{location}</p>\n-      <div id=\"map\" class=\"h-auto\"></div>\n-    </div>\n-  );\n-};\n-\n-export default EventCard;\n-import React from \"react\";\n-import Leaflet from \"leaflet\"; // import everything from leaflet\n-import \"leaflet/dist/leaflet.css\"; // import leaflet css\n-\n-const EventCard = ({\n-  id,\n-  title,\n-  description,\n-  startDate,\n-  location,\n-  latitude,\n-  longitude\n-}) => {\n-  // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n-  const WBS = [latitude, longitude];\n-\n-  // create a map object with a center and zoom level\n-  const map = Leaflet.map(\"map\").setView(WBS, 13);\n-\n-  const markerIcon = Leaflet.icon({\n-    iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n-    iconAnchor: [10, 20]\n-  }); // There was an issue with the default marker icon, so we create a new one\n-\n-  Leaflet.marker(WBS, { icon: markerIcon })\n-    .bindPopup(\"My home is here!\") //to show a popup when the marker is clicked\n-    .addTo(map); // add a marker to the map at the WBS coordinates\n-\n-  Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n-    maxZoom: 19,\n-    attribution:\n-      '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n-  }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n-\n-  return (\n-    <div>\n-      <h2>{title}</h2>\n-      <p>{description}</p>\n-      <p>{startDate}</p>\n-      <p>{location}</p>\n-      <div id=\"map\" class=\"h-auto\"></div>\n-    </div>\n-  );\n-};\n-\n-export default EventCard;\n"
                },
                {
                    "date": 1754433880942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,9 @@\n       <h2>{title}</h2>\n       <p>{description}</p>\n       <p>{startDate}</p>\n       <p>{location}</p>\n-      <div ref={mapRef} className=\"h-auto\"></div>\n+      <div ref={mapRef} className=\"h-43\"></div>\n     </div>\n   );\n };\n \n"
                },
                {
                    "date": 1754434032553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,9 +28,9 @@\n         iconAnchor: [10, 20]\n       }); // There was an issue with the default marker icon, so we create a new one\n \n       Leaflet.marker(WBS, { icon: markerIcon })\n-        .bindPopup(\"My home is here!\") //to show a popup when the marker is clicked\n+        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n         .addTo(map); // add a marker to the map at the WBS coordinates\n \n       Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n         maxZoom: 19,\n"
                },
                {
                    "date": 1754434194658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,9 +52,12 @@\n       <h2>{title}</h2>\n       <p>{description}</p>\n       <p>{startDate}</p>\n       <p>{location}</p>\n-      <div ref={mapRef} className=\"h-43\"></div>\n+      <div\n+        ref={mapRef}\n+        className=\"h-full block w-full aspect-square object-contain\"\n+      ></div>\n     </div>\n   );\n };\n \n"
                },
                {
                    "date": 1754434242326,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n     };\n   }, [latitude, longitude]);\n \n   return (\n-    <div>\n+    <div className=\"h-full\">\n       <h2>{title}</h2>\n       <p>{description}</p>\n       <p>{startDate}</p>\n       <p>{location}</p>\n"
                },
                {
                    "date": 1754434254616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,64 @@\n+import React, { useEffect, useRef } from \"react\";\n+import Leaflet from \"leaflet\"; // import everything from leaflet\n+import \"leaflet/dist/leaflet.css\"; // import leaflet css\n+\n+const EventCard = ({\n+  id,\n+  title,\n+  description,\n+  startDate,\n+  location,\n+  latitude,\n+  longitude\n+}) => {\n+  const mapRef = useRef(null);\n+  const mapInstanceRef = useRef(null);\n+\n+  useEffect(() => {\n+    if (mapRef.current && !mapInstanceRef.current) {\n+      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n+      const WBS = [latitude, longitude];\n+\n+      // create a map object with a center and zoom level\n+      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n+      mapInstanceRef.current = map;\n+\n+      const markerIcon = Leaflet.icon({\n+        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n+        iconAnchor: [10, 20]\n+      }); // There was an issue with the default marker icon, so we create a new one\n+\n+      Leaflet.marker(WBS, { icon: markerIcon })\n+        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n+        .addTo(map); // add a marker to the map at the WBS coordinates\n+\n+      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n+        maxZoom: 19,\n+        attribution:\n+          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n+      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n+    }\n+\n+    return () => {\n+      if (mapInstanceRef.current) {\n+        mapInstanceRef.current.remove();\n+        mapInstanceRef.current = null;\n+      }\n+    };\n+  }, [latitude, longitude]);\n+\n+  return (\n+    <div className=\"h-full\">\n+      <h2>{title}</h2>\n+      <p>{description}</p>\n+      <p>{startDate}</p>\n+      <p>{location}</p>\n+      <div\n+        ref={mapRef}\n+        className=\"h-auto block w-full aspect-square object-contain\"\n+      ></div>\n+    </div>\n+  );\n+};\n+\n+export default EventCard;\n"
                },
                {
                    "date": 1754434498649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,81 +47,33 @@\n     };\n   }, [latitude, longitude]);\n \n   return (\n-    <div className=\"h-full\">\n+    /*  <div className=\"h-full\">\n       <h2>{title}</h2>\n       <p>{description}</p>\n       <p>{startDate}</p>\n       <p>{location}</p>\n       <div\n         ref={mapRef}\n         className=\"h-auto block w-full aspect-square object-contain\"\n       ></div>\n-    </div>\n-  );\n-};\n+    </div> */\n \n-export default EventCard;\n-import React, { useEffect, useRef } from \"react\";\n-import Leaflet from \"leaflet\"; // import everything from leaflet\n-import \"leaflet/dist/leaflet.css\"; // import leaflet css\n+    <div className=\"card bg-base-100 w-96 shadow-sm\">\n+      <div className=\"card-body items-center text-center\">\n+        <h2 className=\"card-title\">{title}</h2>\n+        <p className=\"card-text\">{description}</p>\n+        <p>{startDate}</p>\n+        <p>{location}</p>\n+      </div>\n \n-const EventCard = ({\n-  id,\n-  title,\n-  description,\n-  startDate,\n-  location,\n-  latitude,\n-  longitude\n-}) => {\n-  const mapRef = useRef(null);\n-  const mapInstanceRef = useRef(null);\n-\n-  useEffect(() => {\n-    if (mapRef.current && !mapInstanceRef.current) {\n-      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n-      const WBS = [latitude, longitude];\n-\n-      // create a map object with a center and zoom level\n-      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n-      mapInstanceRef.current = map;\n-\n-      const markerIcon = Leaflet.icon({\n-        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n-        iconAnchor: [10, 20]\n-      }); // There was an issue with the default marker icon, so we create a new one\n-\n-      Leaflet.marker(WBS, { icon: markerIcon })\n-        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n-        .addTo(map); // add a marker to the map at the WBS coordinates\n-\n-      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n-        maxZoom: 19,\n-        attribution:\n-          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n-      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n-    }\n-\n-    return () => {\n-      if (mapInstanceRef.current) {\n-        mapInstanceRef.current.remove();\n-        mapInstanceRef.current = null;\n-      }\n-    };\n-  }, [latitude, longitude]);\n-\n-  return (\n-    <div className=\"h-full\">\n-      <h2>{title}</h2>\n-      <p>{description}</p>\n-      <p>{startDate}</p>\n-      <p>{location}</p>\n-      <div\n-        ref={mapRef}\n-        className=\"h-full block w-full aspect-square object-contain\"\n-      ></div>\n+      <figure className=\"px-10 pt-10\">\n+        <div\n+          ref={mapRef}\n+          className=\"h-auto block w-full aspect-square object-contain\"\n+        ></div>\n+      </figure>\n     </div>\n   );\n };\n \n"
                },
                {
                    "date": 1754434558807,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n         className=\"h-auto block w-full aspect-square object-contain\"\n       ></div>\n     </div> */\n \n-    <div className=\"card bg-base-100 w-96 shadow-sm\">\n+    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg  \">\n       <div className=\"card-body items-center text-center\">\n         <h2 className=\"card-title\">{title}</h2>\n         <p className=\"card-text\">{description}</p>\n         <p>{startDate}</p>\n"
                },
                {
                    "date": 1754434589439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n \n       <figure className=\"px-10 pt-10\">\n         <div\n           ref={mapRef}\n-          className=\"h-auto block w-full aspect-square object-contain\"\n+          className=\"block object-contain w-full bg-white h-52 aspect-square\"\n         ></div>\n       </figure>\n     </div>\n   );\n"
                },
                {
                    "date": 1754434603655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n         <p>{startDate}</p>\n         <p>{location}</p>\n       </div>\n \n-      <figure className=\"px-10 pt-10\">\n+      <figure>\n         <div\n           ref={mapRef}\n           className=\"block object-contain w-full bg-white h-52 aspect-square\"\n         ></div>\n"
                },
                {
                    "date": 1754435889254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+import React, { useEffect, useRef } from \"react\";\n+import Leaflet from \"leaflet\"; // import everything from leaflet\n+import \"leaflet/dist/leaflet.css\"; // import leaflet css\n+\n+const EventCard = ({\n+  id,\n+  title,\n+  description,\n+  startDate,\n+  location,\n+  latitude,\n+  longitude\n+}) => {\n+  const mapRef = useRef(null);\n+  const mapInstanceRef = useRef(null);\n+\n+  useEffect(() => {\n+    if (mapRef.current && !mapInstanceRef.current) {\n+      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n+      const WBS = [latitude, longitude];\n+\n+      // create a map object with a center and zoom level\n+      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n+      mapInstanceRef.current = map;\n+\n+      const markerIcon = Leaflet.icon({\n+        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n+        iconAnchor: [10, 20]\n+      }); // There was an issue with the default marker icon, so we create a new one\n+\n+      Leaflet.marker(WBS, { icon: markerIcon })\n+        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n+        .addTo(map); // add a marker to the map at the WBS coordinates\n+\n+      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n+        maxZoom: 19,\n+        attribution:\n+          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n+      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n+    }\n+\n+    return () => {\n+      if (mapInstanceRef.current) {\n+        mapInstanceRef.current.remove();\n+        mapInstanceRef.current = null;\n+      }\n+    };\n+  }, [latitude, longitude]);\n+\n+  return (\n+    /*  <div className=\"h-full\">\n+      <h2>{title}</h2>\n+      <p>{description}</p>\n+      <p>{startDate}</p>\n+      <p>{location}</p>\n+      <div\n+        ref={mapRef}\n+        className=\"h-auto block w-full aspect-square object-contain\"\n+      ></div>\n+    </div> */\n+\n+    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg  \">\n+      <div className=\"card-body items-center text-center\">\n+        <h2 className=\"card-title\">{title}</h2>\n+        <p className=\"card-text\">{description}</p>\n+        <p>{startDate}</p>\n+        <p>{location}</p>\n+      </div>\n+\n+      <figure>\n+        <div\n+          ref={mapRef}\n+          className=\"block object-contain w-full bg-white h-auto aspect-square\"\n+        ></div>\n+      </figure>\n+    </div>\n+  );\n+};\n+\n+export default EventCard;\n"
                },
                {
                    "date": 1754435897186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+import React, { useEffect, useRef } from \"react\";\n+import Leaflet from \"leaflet\"; // import everything from leaflet\n+import \"leaflet/dist/leaflet.css\"; // import leaflet css\n+\n+const EventCard = ({\n+  id,\n+  title,\n+  description,\n+  startDate,\n+  location,\n+  latitude,\n+  longitude\n+}) => {\n+  const mapRef = useRef(null);\n+  const mapInstanceRef = useRef(null);\n+\n+  useEffect(() => {\n+    if (mapRef.current && !mapInstanceRef.current) {\n+      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n+      const WBS = [latitude, longitude];\n+\n+      // create a map object with a center and zoom level\n+      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n+      mapInstanceRef.current = map;\n+\n+      const markerIcon = Leaflet.icon({\n+        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n+        iconAnchor: [10, 20]\n+      }); // There was an issue with the default marker icon, so we create a new one\n+\n+      Leaflet.marker(WBS, { icon: markerIcon })\n+        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n+        .addTo(map); // add a marker to the map at the WBS coordinates\n+\n+      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n+        maxZoom: 19,\n+        attribution:\n+          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n+      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n+    }\n+\n+    return () => {\n+      if (mapInstanceRef.current) {\n+        mapInstanceRef.current.remove();\n+        mapInstanceRef.current = null;\n+      }\n+    };\n+  }, [latitude, longitude]);\n+\n+  return (\n+    /*  <div className=\"h-full\">\n+      <h2>{title}</h2>\n+      <p>{description}</p>\n+      <p>{startDate}</p>\n+      <p>{location}</p>\n+      <div\n+        ref={mapRef}\n+        className=\"h-auto block w-full aspect-square object-contain\"\n+      ></div>\n+    </div> */\n+\n+    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg  \">\n+      <div className=\"card-body items-center text-center\">\n+        <h2 className=\"card-title\">{title}</h2>\n+        <p className=\"card-text\">{description}</p>\n+        <p>{startDate}</p>\n+        <p>{location}</p>\n+      </div>\n+\n+      <figure>\n+        <div\n+          ref={mapRef}\n+          className=\"block object-contain w-full bg-white h-full aspect-square\"\n+        ></div>\n+      </figure>\n+    </div>\n+  );\n+};\n+\n+export default EventCard;\n"
                },
                {
                    "date": 1754435940744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n \n       <figure>\n         <div\n           ref={mapRef}\n-          className=\"block object-contain w-full bg-white h-full aspect-square\"\n+          className=\"block object-contain w-full bg-white h-42 aspect-square\"\n         ></div>\n       </figure>\n     </div>\n   );\n"
                },
                {
                    "date": 1754436041249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n         className=\"h-auto block w-full aspect-square object-contain\"\n       ></div>\n     </div> */\n \n-    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg  \">\n+    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2  \">\n       <div className=\"card-body items-center text-center\">\n         <h2 className=\"card-title\">{title}</h2>\n         <p className=\"card-text\">{description}</p>\n         <p>{startDate}</p>\n"
                },
                {
                    "date": 1754436149152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n \n       <figure>\n         <div\n           ref={mapRef}\n-          className=\"block object-contain w-full bg-white h-42 aspect-square\"\n+          className=\"block object-contain w-full bg-white h-1/2 aspect-square\"\n         ></div>\n       </figure>\n     </div>\n   );\n"
                },
                {
                    "date": 1754436159225,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,172 +69,12 @@\n \n       <figure>\n         <div\n           ref={mapRef}\n-          className=\"block object-contain w-full bg-white h-1/2 aspect-square\"\n+          className=\"block object-contain w-full bg-white h-2/3 aspect-square\"\n         ></div>\n       </figure>\n     </div>\n   );\n };\n \n export default EventCard;\n-import React, { useEffect, useRef } from \"react\";\n-import Leaflet from \"leaflet\"; // import everything from leaflet\n-import \"leaflet/dist/leaflet.css\"; // import leaflet css\n-\n-const EventCard = ({\n-  id,\n-  title,\n-  description,\n-  startDate,\n-  location,\n-  latitude,\n-  longitude\n-}) => {\n-  const mapRef = useRef(null);\n-  const mapInstanceRef = useRef(null);\n-\n-  useEffect(() => {\n-    if (mapRef.current && !mapInstanceRef.current) {\n-      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n-      const WBS = [latitude, longitude];\n-\n-      // create a map object with a center and zoom level\n-      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n-      mapInstanceRef.current = map;\n-\n-      const markerIcon = Leaflet.icon({\n-        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n-        iconAnchor: [10, 20]\n-      }); // There was an issue with the default marker icon, so we create a new one\n-\n-      Leaflet.marker(WBS, { icon: markerIcon })\n-        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n-        .addTo(map); // add a marker to the map at the WBS coordinates\n-\n-      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n-        maxZoom: 19,\n-        attribution:\n-          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n-      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n-    }\n-\n-    return () => {\n-      if (mapInstanceRef.current) {\n-        mapInstanceRef.current.remove();\n-        mapInstanceRef.current = null;\n-      }\n-    };\n-  }, [latitude, longitude]);\n-\n-  return (\n-    /*  <div className=\"h-full\">\n-      <h2>{title}</h2>\n-      <p>{description}</p>\n-      <p>{startDate}</p>\n-      <p>{location}</p>\n-      <div\n-        ref={mapRef}\n-        className=\"h-auto block w-full aspect-square object-contain\"\n-      ></div>\n-    </div> */\n-\n-    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg  \">\n-      <div className=\"card-body items-center text-center\">\n-        <h2 className=\"card-title\">{title}</h2>\n-        <p className=\"card-text\">{description}</p>\n-        <p>{startDate}</p>\n-        <p>{location}</p>\n-      </div>\n-\n-      <figure>\n-        <div\n-          ref={mapRef}\n-          className=\"block object-contain w-full bg-white h-auto aspect-square\"\n-        ></div>\n-      </figure>\n-    </div>\n-  );\n-};\n-\n-export default EventCard;\n-import React, { useEffect, useRef } from \"react\";\n-import Leaflet from \"leaflet\"; // import everything from leaflet\n-import \"leaflet/dist/leaflet.css\"; // import leaflet css\n-\n-const EventCard = ({\n-  id,\n-  title,\n-  description,\n-  startDate,\n-  location,\n-  latitude,\n-  longitude\n-}) => {\n-  const mapRef = useRef(null);\n-  const mapInstanceRef = useRef(null);\n-\n-  useEffect(() => {\n-    if (mapRef.current && !mapInstanceRef.current) {\n-      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n-      const WBS = [latitude, longitude];\n-\n-      // create a map object with a center and zoom level\n-      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n-      mapInstanceRef.current = map;\n-\n-      const markerIcon = Leaflet.icon({\n-        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n-        iconAnchor: [10, 20]\n-      }); // There was an issue with the default marker icon, so we create a new one\n-\n-      Leaflet.marker(WBS, { icon: markerIcon })\n-        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n-        .addTo(map); // add a marker to the map at the WBS coordinates\n-\n-      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n-        maxZoom: 19,\n-        attribution:\n-          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n-      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n-    }\n-\n-    return () => {\n-      if (mapInstanceRef.current) {\n-        mapInstanceRef.current.remove();\n-        mapInstanceRef.current = null;\n-      }\n-    };\n-  }, [latitude, longitude]);\n-\n-  return (\n-    /*  <div className=\"h-full\">\n-      <h2>{title}</h2>\n-      <p>{description}</p>\n-      <p>{startDate}</p>\n-      <p>{location}</p>\n-      <div\n-        ref={mapRef}\n-        className=\"h-auto block w-full aspect-square object-contain\"\n-      ></div>\n-    </div> */\n-\n-    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg  \">\n-      <div className=\"card-body items-center text-center\">\n-        <h2 className=\"card-title\">{title}</h2>\n-        <p className=\"card-text\">{description}</p>\n-        <p>{startDate}</p>\n-        <p>{location}</p>\n-      </div>\n-\n-      <figure>\n-        <div\n-          ref={mapRef}\n-          className=\"block object-contain w-full bg-white h-52 aspect-square\"\n-        ></div>\n-      </figure>\n-    </div>\n-  );\n-};\n-\n-export default EventCard;\n"
                },
                {
                    "date": 1754436173227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n \n       <figure>\n         <div\n           ref={mapRef}\n-          className=\"block object-contain w-full bg-white h-2/3 aspect-square\"\n+          className=\"block object-contain w-full bg-white h-auto aspect-square\"\n         ></div>\n       </figure>\n     </div>\n   );\n"
                },
                {
                    "date": 1754436183628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n \n       <figure>\n         <div\n           ref={mapRef}\n-          className=\"block object-contain w-full bg-white h-auto aspect-square\"\n+          className=\"block object-contain w-full bg-white h-full aspect-square\"\n         ></div>\n       </figure>\n     </div>\n   );\n"
                },
                {
                    "date": 1754436215628,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n       ></div>\n     </div> */\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2  \">\n-      <div className=\"card-body items-center text-center\">\n+      <div className=\"card-body items-center text-center space-y-2 \">\n         <h2 className=\"card-title\">{title}</h2>\n         <p className=\"card-text\">{description}</p>\n         <p>{startDate}</p>\n         <p>{location}</p>\n"
                },
                {
                    "date": 1754436228439,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,10 +58,10 @@\n         className=\"h-auto block w-full aspect-square object-contain\"\n       ></div>\n     </div> */\n \n-    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2  \">\n-      <div className=\"card-body items-center text-center space-y-2 \">\n+    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-1 \">\n+      <div className=\"card-body items-center text-center space-y-1 \">\n         <h2 className=\"card-title\">{title}</h2>\n         <p className=\"card-text\">{description}</p>\n         <p>{startDate}</p>\n         <p>{location}</p>\n"
                },
                {
                    "date": 1754436337917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n const EventCard = ({\n   id,\n   title,\n   description,\n-  startDate,\n+  date,\n   location,\n   latitude,\n   longitude\n }) => {\n@@ -62,9 +62,9 @@\n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-1 \">\n       <div className=\"card-body items-center text-center space-y-1 \">\n         <h2 className=\"card-title\">{title}</h2>\n         <p className=\"card-text\">{description}</p>\n-        <p>{startDate}</p>\n+        <p>{date}</p>\n         <p>{location}</p>\n       </div>\n \n       <figure>\n"
                },
                {
                    "date": 1754436364526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+import React, { useEffect, useRef } from \"react\";\n+import Leaflet from \"leaflet\"; // import everything from leaflet\n+import \"leaflet/dist/leaflet.css\"; // import leaflet css\n+\n+const EventCard = ({\n+  id,\n+  title,\n+  description,\n+  date,\n+  location,\n+  latitude,\n+  longitude\n+}) => {\n+  const mapRef = useRef(null);\n+  const mapInstanceRef = useRef(null);\n+\n+  useEffect(() => {\n+    if (mapRef.current && !mapInstanceRef.current) {\n+      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n+      const WBS = [latitude, longitude];\n+\n+      // create a map object with a center and zoom level\n+      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n+      mapInstanceRef.current = map;\n+\n+      const markerIcon = Leaflet.icon({\n+        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n+        iconAnchor: [10, 20]\n+      }); // There was an issue with the default marker icon, so we create a new one\n+\n+      Leaflet.marker(WBS, { icon: markerIcon })\n+        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n+        .addTo(map); // add a marker to the map at the WBS coordinates\n+\n+      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n+        maxZoom: 19,\n+        attribution:\n+          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n+      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n+    }\n+\n+    return () => {\n+      if (mapInstanceRef.current) {\n+        mapInstanceRef.current.remove();\n+        mapInstanceRef.current = null;\n+      }\n+    };\n+  }, [latitude, longitude]);\n+\n+  return (\n+    /*  <div className=\"h-full\">\n+      <h2>{title}</h2>\n+      <p>{description}</p>\n+      <p>{startDate}</p>\n+      <p>{location}</p>\n+      <div\n+        ref={mapRef}\n+        className=\"h-auto block w-full aspect-square object-contain\"\n+      ></div>\n+    </div> */\n+\n+    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-1 \">\n+      <div className=\"card-body items-center text-center space-y-1 \">\n+        <h2 className=\"card-title\">{title}</h2>\n+        <p className=\"card-text\">{description}</p>\n+        <p>{date.toLocaleDateString()}</p>\n+        <p>{location}</p>\n+      </div>\n+\n+      <figure>\n+        <div\n+          ref={mapRef}\n+          className=\"block object-contain w-full bg-white h-full aspect-square\"\n+        ></div>\n+      </figure>\n+    </div>\n+  );\n+};\n+\n+export default EventCard;\n"
                },
                {
                    "date": 1754436390359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,81 @@\n+import React, { useEffect, useRef } from \"react\";\n+import Leaflet from \"leaflet\"; // import everything from leaflet\n+import \"leaflet/dist/leaflet.css\"; // import leaflet css\n+\n+const EventCard = ({\n+  id,\n+  title,\n+  description,\n+  date,\n+  location,\n+  latitude,\n+  longitude\n+}) => {\n+  const mapRef = useRef(null);\n+  const mapInstanceRef = useRef(null);\n+\n+  useEffect(() => {\n+    if (mapRef.current && !mapInstanceRef.current) {\n+      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n+      const WBS = [latitude, longitude];\n+\n+      // create a map object with a center and zoom level\n+      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n+      mapInstanceRef.current = map;\n+\n+      const markerIcon = Leaflet.icon({\n+        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n+        iconAnchor: [10, 20]\n+      }); // There was an issue with the default marker icon, so we create a new one\n+\n+      Leaflet.marker(WBS, { icon: markerIcon })\n+        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n+        .addTo(map); // add a marker to the map at the WBS coordinates\n+\n+      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n+        maxZoom: 19,\n+        attribution:\n+          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n+      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n+    }\n+\n+    return () => {\n+      if (mapInstanceRef.current) {\n+        mapInstanceRef.current.remove();\n+        mapInstanceRef.current = null;\n+      }\n+    };\n+  }, [latitude, longitude]);\n+\n+  return (\n+    /*  <div className=\"h-full\">\n+      <h2>{title}</h2>\n+      <p>{description}</p>\n+      <p>{startDate}</p>\n+      <p>{location}</p>\n+      <div\n+        ref={mapRef}\n+        className=\"h-auto block w-full aspect-square object-contain\"\n+      ></div>\n+    </div> */\n+\n+    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-1 \">\n+      <div className=\"card-body items-center text-center space-y-1 \">\n+        <h2 className=\"card-title\">{title}</h2>\n+        <p className=\"card-text\">{description}</p>\n+\n+        <p>{date}</p>\n+        <p>{location}</p>\n+      </div>\n+\n+      <figure>\n+        <div\n+          ref={mapRef}\n+          className=\"block object-contain w-full bg-white h-full aspect-square\"\n+        ></div>\n+      </figure>\n+    </div>\n+  );\n+};\n+\n+export default EventCard;\n"
                },
                {
                    "date": 1754436511890,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,81 @@\n+import React, { useEffect, useRef } from \"react\";\n+import Leaflet from \"leaflet\"; // import everything from leaflet\n+import \"leaflet/dist/leaflet.css\"; // import leaflet css\n+\n+const EventCard = ({\n+  id,\n+  title,\n+  description,\n+  date,\n+  location,\n+  latitude,\n+  longitude\n+}) => {\n+  const mapRef = useRef(null);\n+  const mapInstanceRef = useRef(null);\n+\n+  useEffect(() => {\n+    if (mapRef.current && !mapInstanceRef.current) {\n+      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n+      const WBS = [latitude, longitude];\n+\n+      // create a map object with a center and zoom level\n+      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n+      mapInstanceRef.current = map;\n+\n+      const markerIcon = Leaflet.icon({\n+        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n+        iconAnchor: [10, 20]\n+      }); // There was an issue with the default marker icon, so we create a new one\n+\n+      Leaflet.marker(WBS, { icon: markerIcon })\n+        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n+        .addTo(map); // add a marker to the map at the WBS coordinates\n+\n+      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n+        maxZoom: 19,\n+        attribution:\n+          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n+      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n+    }\n+\n+    return () => {\n+      if (mapInstanceRef.current) {\n+        mapInstanceRef.current.remove();\n+        mapInstanceRef.current = null;\n+      }\n+    };\n+  }, [latitude, longitude]);\n+\n+  return (\n+    /*  <div className=\"h-full\">\n+      <h2>{title}</h2>\n+      <p>{description}</p>\n+      <p>{startDate}</p>\n+      <p>{location}</p>\n+      <div\n+        ref={mapRef}\n+        className=\"h-auto block w-full aspect-square object-contain\"\n+      ></div>\n+    </div> */\n+\n+    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-1 \">\n+      <div className=\"card-body items-center text-center space-y-1 \">\n+        <h2 className=\"card-title\">{title}</h2>\n+        <p className=\"card-text\">{description}</p>\n+\n+        <p>{new Date(date).toLocaleDateString()}</p>\n+        <p>{location}</p>\n+      </div>\n+\n+      <figure>\n+        <div\n+          ref={mapRef}\n+          className=\"block object-contain w-full bg-white h-full aspect-square\"\n+        ></div>\n+      </figure>\n+    </div>\n+  );\n+};\n+\n+export default EventCard;\n"
                },
                {
                    "date": 1754436527508,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n       <div className=\"card-body items-center text-center space-y-1 \">\n         <h2 className=\"card-title\">{title}</h2>\n         <p className=\"card-text\">{description}</p>\n \n-        <p>{new Date(date).toLocaleDateString()}</p>\n+        <p>{new Date(date)}</p>\n         <p>{location}</p>\n       </div>\n \n       <figure>\n"
                },
                {
                    "date": 1754436567017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n       <div className=\"card-body items-center text-center space-y-1 \">\n         <h2 className=\"card-title\">{title}</h2>\n         <p className=\"card-text\">{description}</p>\n \n-        <p>{new Date(date)}</p>\n+        <p>{new Date(date).toLocaleDateString()}</p>\n         <p>{location}</p>\n       </div>\n \n       <figure>\n"
                },
                {
                    "date": 1754436581989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n       <div className=\"card-body items-center text-center space-y-1 \">\n         <h2 className=\"card-title\">{title}</h2>\n         <p className=\"card-text\">{description}</p>\n \n-        <p>{new Date(date).toLocaleDateString()}</p>\n+        <p>{date}</p>\n         <p>{location}</p>\n       </div>\n \n       <figure>\n"
                },
                {
                    "date": 1754436730766,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,15 @@\n       <div className=\"card-body items-center text-center space-y-1 \">\n         <h2 className=\"card-title\">{title}</h2>\n         <p className=\"card-text\">{description}</p>\n \n-        <p>{date}</p>\n+        <p>\n+          {date.plit(\"T\")[0] +\n+            \" - \" +\n+            date.plit(\"T\")[1].split(\":\")[0] +\n+            \":\" +\n+            date.split(\"T\")[1].split(\":\")[1]}\n+        </p>\n         <p>{location}</p>\n       </div>\n \n       <figure>\n@@ -78,245 +84,4 @@\n   );\n };\n \n export default EventCard;\n-import React, { useEffect, useRef } from \"react\";\n-import Leaflet from \"leaflet\"; // import everything from leaflet\n-import \"leaflet/dist/leaflet.css\"; // import leaflet css\n-\n-const EventCard = ({\n-  id,\n-  title,\n-  description,\n-  date,\n-  location,\n-  latitude,\n-  longitude\n-}) => {\n-  const mapRef = useRef(null);\n-  const mapInstanceRef = useRef(null);\n-\n-  useEffect(() => {\n-    if (mapRef.current && !mapInstanceRef.current) {\n-      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n-      const WBS = [latitude, longitude];\n-\n-      // create a map object with a center and zoom level\n-      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n-      mapInstanceRef.current = map;\n-\n-      const markerIcon = Leaflet.icon({\n-        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n-        iconAnchor: [10, 20]\n-      }); // There was an issue with the default marker icon, so we create a new one\n-\n-      Leaflet.marker(WBS, { icon: markerIcon })\n-        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n-        .addTo(map); // add a marker to the map at the WBS coordinates\n-\n-      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n-        maxZoom: 19,\n-        attribution:\n-          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n-      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n-    }\n-\n-    return () => {\n-      if (mapInstanceRef.current) {\n-        mapInstanceRef.current.remove();\n-        mapInstanceRef.current = null;\n-      }\n-    };\n-  }, [latitude, longitude]);\n-\n-  return (\n-    /*  <div className=\"h-full\">\n-      <h2>{title}</h2>\n-      <p>{description}</p>\n-      <p>{startDate}</p>\n-      <p>{location}</p>\n-      <div\n-        ref={mapRef}\n-        className=\"h-auto block w-full aspect-square object-contain\"\n-      ></div>\n-    </div> */\n-\n-    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-1 \">\n-      <div className=\"card-body items-center text-center space-y-1 \">\n-        <h2 className=\"card-title\">{title}</h2>\n-        <p className=\"card-text\">{description}</p>\n-\n-        <p>{date}</p>\n-        <p>{location}</p>\n-      </div>\n-\n-      <figure>\n-        <div\n-          ref={mapRef}\n-          className=\"block object-contain w-full bg-white h-full aspect-square\"\n-        ></div>\n-      </figure>\n-    </div>\n-  );\n-};\n-\n-export default EventCard;\n-import React, { useEffect, useRef } from \"react\";\n-import Leaflet from \"leaflet\"; // import everything from leaflet\n-import \"leaflet/dist/leaflet.css\"; // import leaflet css\n-\n-const EventCard = ({\n-  id,\n-  title,\n-  description,\n-  date,\n-  location,\n-  latitude,\n-  longitude\n-}) => {\n-  const mapRef = useRef(null);\n-  const mapInstanceRef = useRef(null);\n-\n-  useEffect(() => {\n-    if (mapRef.current && !mapInstanceRef.current) {\n-      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n-      const WBS = [latitude, longitude];\n-\n-      // create a map object with a center and zoom level\n-      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n-      mapInstanceRef.current = map;\n-\n-      const markerIcon = Leaflet.icon({\n-        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n-        iconAnchor: [10, 20]\n-      }); // There was an issue with the default marker icon, so we create a new one\n-\n-      Leaflet.marker(WBS, { icon: markerIcon })\n-        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n-        .addTo(map); // add a marker to the map at the WBS coordinates\n-\n-      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n-        maxZoom: 19,\n-        attribution:\n-          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n-      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n-    }\n-\n-    return () => {\n-      if (mapInstanceRef.current) {\n-        mapInstanceRef.current.remove();\n-        mapInstanceRef.current = null;\n-      }\n-    };\n-  }, [latitude, longitude]);\n-\n-  return (\n-    /*  <div className=\"h-full\">\n-      <h2>{title}</h2>\n-      <p>{description}</p>\n-      <p>{startDate}</p>\n-      <p>{location}</p>\n-      <div\n-        ref={mapRef}\n-        className=\"h-auto block w-full aspect-square object-contain\"\n-      ></div>\n-    </div> */\n-\n-    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-1 \">\n-      <div className=\"card-body items-center text-center space-y-1 \">\n-        <h2 className=\"card-title\">{title}</h2>\n-        <p className=\"card-text\">{description}</p>\n-        <p>{date.toLocaleDateString()}</p>\n-        <p>{location}</p>\n-      </div>\n-\n-      <figure>\n-        <div\n-          ref={mapRef}\n-          className=\"block object-contain w-full bg-white h-full aspect-square\"\n-        ></div>\n-      </figure>\n-    </div>\n-  );\n-};\n-\n-export default EventCard;\n-import React, { useEffect, useRef } from \"react\";\n-import Leaflet from \"leaflet\"; // import everything from leaflet\n-import \"leaflet/dist/leaflet.css\"; // import leaflet css\n-\n-const EventCard = ({\n-  id,\n-  title,\n-  description,\n-  date,\n-  location,\n-  latitude,\n-  longitude\n-}) => {\n-  const mapRef = useRef(null);\n-  const mapInstanceRef = useRef(null);\n-\n-  useEffect(() => {\n-    if (mapRef.current && !mapInstanceRef.current) {\n-      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n-      const WBS = [latitude, longitude];\n-\n-      // create a map object with a center and zoom level\n-      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n-      mapInstanceRef.current = map;\n-\n-      const markerIcon = Leaflet.icon({\n-        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n-        iconAnchor: [10, 20]\n-      }); // There was an issue with the default marker icon, so we create a new one\n-\n-      Leaflet.marker(WBS, { icon: markerIcon })\n-        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n-        .addTo(map); // add a marker to the map at the WBS coordinates\n-\n-      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n-        maxZoom: 19,\n-        attribution:\n-          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n-      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n-    }\n-\n-    return () => {\n-      if (mapInstanceRef.current) {\n-        mapInstanceRef.current.remove();\n-        mapInstanceRef.current = null;\n-      }\n-    };\n-  }, [latitude, longitude]);\n-\n-  return (\n-    /*  <div className=\"h-full\">\n-      <h2>{title}</h2>\n-      <p>{description}</p>\n-      <p>{startDate}</p>\n-      <p>{location}</p>\n-      <div\n-        ref={mapRef}\n-        className=\"h-auto block w-full aspect-square object-contain\"\n-      ></div>\n-    </div> */\n-\n-    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-1 \">\n-      <div className=\"card-body items-center text-center space-y-1 \">\n-        <h2 className=\"card-title\">{title}</h2>\n-        <p className=\"card-text\">{description}</p>\n-        <p>{date}</p>\n-        <p>{location}</p>\n-      </div>\n-\n-      <figure>\n-        <div\n-          ref={mapRef}\n-          className=\"block object-contain w-full bg-white h-full aspect-square\"\n-        ></div>\n-      </figure>\n-    </div>\n-  );\n-};\n-\n-export default EventCard;\n"
                },
                {
                    "date": 1754436762989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,11 +64,12 @@\n         <h2 className=\"card-title\">{title}</h2>\n         <p className=\"card-text\">{description}</p>\n \n         <p>\n-          {date.plit(\"T\")[0] +\n+          {date.split(\"T\")[0] +\n             \" - \" +\n-            date.plit(\"T\")[1].split(\":\")[0] +\n+            \"At \" +\n+            date.split(\"T\")[1].split(\":\")[0] +\n             \":\" +\n             date.split(\"T\")[1].split(\":\")[1]}\n         </p>\n         <p>{location}</p>\n"
                },
                {
                    "date": 1754436795039,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -65,10 +65,9 @@\n         <p className=\"card-text\">{description}</p>\n \n         <p>\n           {date.split(\"T\")[0] +\n-            \" - \" +\n-            \"At \" +\n+            \" At \" +\n             date.split(\"T\")[1].split(\":\")[0] +\n             \":\" +\n             date.split(\"T\")[1].split(\":\")[1]}\n         </p>\n"
                },
                {
                    "date": 1754436881719,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n       ></div>\n     </div> */\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-1 \">\n-      <div className=\"card-body items-center text-center space-y-1 \">\n+      <div className=\"card-body p-0 items-center text-center space-y-1 \">\n         <h2 className=\"card-title\">{title}</h2>\n         <p className=\"card-text\">{description}</p>\n \n         <p>\n"
                },
                {
                    "date": 1754436906691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,9 +76,9 @@\n \n       <figure>\n         <div\n           ref={mapRef}\n-          className=\"block object-contain w-full bg-white h-full aspect-square\"\n+          className=\"block object-contain w-full bg-white h-auto aspect-square\"\n         ></div>\n       </figure>\n     </div>\n   );\n"
                },
                {
                    "date": 1754436943190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,10 +58,10 @@\n         className=\"h-auto block w-full aspect-square object-contain\"\n       ></div>\n     </div> */\n \n-    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-1 \">\n-      <div className=\"card-body p-0 items-center text-center space-y-1 \">\n+    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 \">\n+      <div className=\"card-body p-0 items-center text-center space-y-2 \">\n         <h2 className=\"card-title\">{title}</h2>\n         <p className=\"card-text\">{description}</p>\n \n         <p>\n"
                },
                {
                    "date": 1754436973115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n         className=\"h-auto block w-full aspect-square object-contain\"\n       ></div>\n     </div> */\n \n-    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 \">\n+    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 py-2 \">\n       <div className=\"card-body p-0 items-center text-center space-y-2 \">\n         <h2 className=\"card-title\">{title}</h2>\n         <p className=\"card-text\">{description}</p>\n \n"
                },
                {
                    "date": 1754436980220,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -58,9 +58,9 @@\n         className=\"h-auto block w-full aspect-square object-contain\"\n       ></div>\n     </div> */\n \n-    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 py-2 \">\n+    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n       <div className=\"card-body p-0 items-center text-center space-y-2 \">\n         <h2 className=\"card-title\">{title}</h2>\n         <p className=\"card-text\">{description}</p>\n \n"
                },
                {
                    "date": 1754437333568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n       ></div>\n     </div> */\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n-      <div className=\"card-body p-0 items-center text-center space-y-2 \">\n+      <div className=\"card-body px-2 items-center text-center space-y-2 \">\n         <h2 className=\"card-title\">{title}</h2>\n         <p className=\"card-text\">{description}</p>\n \n         <p>\n"
                },
                {
                    "date": 1754437349045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n       ></div>\n     </div> */\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n-      <div className=\"card-body px-2 items-center text-center space-y-2 \">\n+      <div className=\"card-body px-0 items-center text-center space-y-2 \">\n         <h2 className=\"card-title\">{title}</h2>\n         <p className=\"card-text\">{description}</p>\n \n         <p>\n"
                },
                {
                    "date": 1754437380585,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n       ></div>\n     </div> */\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n-      <div className=\"card-body px-0 items-center text-center space-y-2 \">\n+      <div className=\"card-body px-0 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n         <p className=\"card-text\">{description}</p>\n \n         <p>\n"
                },
                {
                    "date": 1754437407305,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,87 @@\n+import React, { useEffect, useRef } from \"react\";\n+import Leaflet from \"leaflet\"; // import everything from leaflet\n+import \"leaflet/dist/leaflet.css\"; // import leaflet css\n+\n+const EventCard = ({\n+  id,\n+  title,\n+  description,\n+  date,\n+  location,\n+  latitude,\n+  longitude\n+}) => {\n+  const mapRef = useRef(null);\n+  const mapInstanceRef = useRef(null);\n+\n+  useEffect(() => {\n+    if (mapRef.current && !mapInstanceRef.current) {\n+      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n+      const WBS = [latitude, longitude];\n+\n+      // create a map object with a center and zoom level\n+      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n+      mapInstanceRef.current = map;\n+\n+      const markerIcon = Leaflet.icon({\n+        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n+        iconAnchor: [10, 20]\n+      }); // There was an issue with the default marker icon, so we create a new one\n+\n+      Leaflet.marker(WBS, { icon: markerIcon })\n+        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n+        .addTo(map); // add a marker to the map at the WBS coordinates\n+\n+      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n+        maxZoom: 19,\n+        attribution:\n+          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n+      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n+    }\n+\n+    return () => {\n+      if (mapInstanceRef.current) {\n+        mapInstanceRef.current.remove();\n+        mapInstanceRef.current = null;\n+      }\n+    };\n+  }, [latitude, longitude]);\n+\n+  return (\n+    /*  <div className=\"h-full\">\n+      <h2>{title}</h2>\n+      <p>{description}</p>\n+      <p>{startDate}</p>\n+      <p>{location}</p>\n+      <div\n+        ref={mapRef}\n+        className=\"h-auto block w-full aspect-square object-contain\"\n+      ></div>\n+    </div> */\n+\n+    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n+      <div className=\"card-body px-0 items-center text-center  \">\n+        <h2 className=\"card-title\">{title}</h2>\n+        <p className=\"card-text\">{description}</p>\n+\n+        <p>\n+          {date.split(\"T\")[0] +\n+            \" At \" +\n+            date.split(\"T\")[1].split(\":\")[0] +\n+            \":\" +\n+            date.split(\"T\")[1].split(\":\")[1]}\n+        </p>\n+        <p>{location}</p>\n+      </div>\n+\n+      <figure>\n+        <div\n+          ref={mapRef}\n+          className=\"block object-contain w-full bg-white h-auto aspect-square\"\n+        ></div>\n+      </figure>\n+    </div>\n+  );\n+};\n+\n+export default EventCard;\n"
                },
                {
                    "date": 1754437430104,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n       ></div>\n     </div> */\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n-      <div className=\"card-body px-0 items-center text-center  \">\n+      <div className=\"card-body px-0 py-0 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n         <p className=\"card-text\">{description}</p>\n \n         <p>\n@@ -84,91 +84,4 @@\n   );\n };\n \n export default EventCard;\n-import React, { useEffect, useRef } from \"react\";\n-import Leaflet from \"leaflet\"; // import everything from leaflet\n-import \"leaflet/dist/leaflet.css\"; // import leaflet css\n-\n-const EventCard = ({\n-  id,\n-  title,\n-  description,\n-  date,\n-  location,\n-  latitude,\n-  longitude\n-}) => {\n-  const mapRef = useRef(null);\n-  const mapInstanceRef = useRef(null);\n-\n-  useEffect(() => {\n-    if (mapRef.current && !mapInstanceRef.current) {\n-      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n-      const WBS = [latitude, longitude];\n-\n-      // create a map object with a center and zoom level\n-      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n-      mapInstanceRef.current = map;\n-\n-      const markerIcon = Leaflet.icon({\n-        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n-        iconAnchor: [10, 20]\n-      }); // There was an issue with the default marker icon, so we create a new one\n-\n-      Leaflet.marker(WBS, { icon: markerIcon })\n-        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n-        .addTo(map); // add a marker to the map at the WBS coordinates\n-\n-      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n-        maxZoom: 19,\n-        attribution:\n-          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n-      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n-    }\n-\n-    return () => {\n-      if (mapInstanceRef.current) {\n-        mapInstanceRef.current.remove();\n-        mapInstanceRef.current = null;\n-      }\n-    };\n-  }, [latitude, longitude]);\n-\n-  return (\n-    /*  <div className=\"h-full\">\n-      <h2>{title}</h2>\n-      <p>{description}</p>\n-      <p>{startDate}</p>\n-      <p>{location}</p>\n-      <div\n-        ref={mapRef}\n-        className=\"h-auto block w-full aspect-square object-contain\"\n-      ></div>\n-    </div> */\n-\n-    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n-      <div className=\"card-body px-0 items-center text-center  \">\n-        <h2 className=\"card-title\">{title}</h2>\n-        <p className=\"card-text\">{description}</p>\n-\n-        <p>\n-          {date.split(\"T\")[0] +\n-            \" At \" +\n-            date.split(\"T\")[1].split(\":\")[0] +\n-            \":\" +\n-            date.split(\"T\")[1].split(\":\")[1]}\n-        </p>\n-        <p>{location}</p>\n-      </div>\n-\n-      <figure>\n-        <div\n-          ref={mapRef}\n-          className=\"block object-contain w-full bg-white h-auto aspect-square\"\n-        ></div>\n-      </figure>\n-    </div>\n-  );\n-};\n-\n-export default EventCard;\n"
                },
                {
                    "date": 1754437468425,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n       ></div>\n     </div> */\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n-      <div className=\"card-body px-0 py-0 items-center text-center  \">\n+      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n         <p className=\"card-text\">{description}</p>\n \n         <p>\n"
                },
                {
                    "date": 1754437520576,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,10 +61,11 @@\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n+        <div className=\"divider\"></div>\n         <p className=\"card-text\">{description}</p>\n-\n+        <div className=\"divider\"></div>\n         <p>\n           {date.split(\"T\")[0] +\n             \" At \" +\n             date.split(\"T\")[1].split(\":\")[0] +\n"
                },
                {
                    "date": 1754437572449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,11 +61,11 @@\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n-        <div className=\"divider\"></div>\n+        <div className=\"divider divider-neutral\"></div>\n         <p className=\"card-text\">{description}</p>\n-        <div className=\"divider\"></div>\n+        <div className=\"divider divider-neutral\"></div>\n         <p>\n           {date.split(\"T\")[0] +\n             \" At \" +\n             date.split(\"T\")[1].split(\":\")[0] +\n"
                },
                {
                    "date": 1754437585017,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n-        <div className=\"divider divider-neutral\"></div>\n+        <div className=\"divider divider-neutral/50\"></div>\n         <p className=\"card-text\">{description}</p>\n         <div className=\"divider divider-neutral\"></div>\n         <p>\n           {date.split(\"T\")[0] +\n"
                },
                {
                    "date": 1754437595350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+import React, { useEffect, useRef } from \"react\";\n+import Leaflet from \"leaflet\"; // import everything from leaflet\n+import \"leaflet/dist/leaflet.css\"; // import leaflet css\n+\n+const EventCard = ({\n+  id,\n+  title,\n+  description,\n+  date,\n+  location,\n+  latitude,\n+  longitude\n+}) => {\n+  const mapRef = useRef(null);\n+  const mapInstanceRef = useRef(null);\n+\n+  useEffect(() => {\n+    if (mapRef.current && !mapInstanceRef.current) {\n+      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n+      const WBS = [latitude, longitude];\n+\n+      // create a map object with a center and zoom level\n+      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n+      mapInstanceRef.current = map;\n+\n+      const markerIcon = Leaflet.icon({\n+        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n+        iconAnchor: [10, 20]\n+      }); // There was an issue with the default marker icon, so we create a new one\n+\n+      Leaflet.marker(WBS, { icon: markerIcon })\n+        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n+        .addTo(map); // add a marker to the map at the WBS coordinates\n+\n+      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n+        maxZoom: 19,\n+        attribution:\n+          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n+      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n+    }\n+\n+    return () => {\n+      if (mapInstanceRef.current) {\n+        mapInstanceRef.current.remove();\n+        mapInstanceRef.current = null;\n+      }\n+    };\n+  }, [latitude, longitude]);\n+\n+  return (\n+    /*  <div className=\"h-full\">\n+      <h2>{title}</h2>\n+      <p>{description}</p>\n+      <p>{startDate}</p>\n+      <p>{location}</p>\n+      <div\n+        ref={mapRef}\n+        className=\"h-auto block w-full aspect-square object-contain\"\n+      ></div>\n+    </div> */\n+\n+    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n+      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n+        <h2 className=\"card-title\">{title}</h2>\n+        <div className=\"divider divider-neutral/20\"></div>\n+        <p className=\"card-text\">{description}</p>\n+        <div className=\"divider divider-neutral\"></div>\n+        <p>\n+          {date.split(\"T\")[0] +\n+            \" At \" +\n+            date.split(\"T\")[1].split(\":\")[0] +\n+            \":\" +\n+            date.split(\"T\")[1].split(\":\")[1]}\n+        </p>\n+        <p>{location}</p>\n+      </div>\n+\n+      <figure>\n+        <div\n+          ref={mapRef}\n+          className=\"block object-contain w-full bg-white h-auto aspect-square\"\n+        ></div>\n+      </figure>\n+    </div>\n+  );\n+};\n+\n+export default EventCard;\n"
                },
                {
                    "date": 1754437604651,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n-        <div className=\"divider divider-neutral/20\"></div>\n+        <div className=\"divider divider-neutral/80\"></div>\n         <p className=\"card-text\">{description}</p>\n         <div className=\"divider divider-neutral\"></div>\n         <p>\n           {date.split(\"T\")[0] +\n"
                },
                {
                    "date": 1754437670940,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,11 +61,11 @@\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n-        <div className=\"divider divider-neutral/80\"></div>\n+        <div className=\"divider divider-neutral\"></div>\n         <p className=\"card-text\">{description}</p>\n-        <div className=\"divider divider-neutral\"></div>\n+        <div className=\"divider divider-base\"></div>\n         <p>\n           {date.split(\"T\")[0] +\n             \" At \" +\n             date.split(\"T\")[1].split(\":\")[0] +\n"
                },
                {
                    "date": 1754437688918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n         <div className=\"divider divider-neutral\"></div>\n         <p className=\"card-text\">{description}</p>\n-        <div className=\"divider divider-base\"></div>\n+        <div className=\"divider divider-info\"></div>\n         <p>\n           {date.split(\"T\")[0] +\n             \" At \" +\n             date.split(\"T\")[1].split(\":\")[0] +\n"
                },
                {
                    "date": 1754437698005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n         <div className=\"divider divider-neutral\"></div>\n         <p className=\"card-text\">{description}</p>\n-        <div className=\"divider divider-info\"></div>\n+        <div className=\"divider divider-info mx-2\"></div>\n         <p>\n           {date.split(\"T\")[0] +\n             \" At \" +\n             date.split(\"T\")[1].split(\":\")[0] +\n@@ -85,92 +85,4 @@\n   );\n };\n \n export default EventCard;\n-import React, { useEffect, useRef } from \"react\";\n-import Leaflet from \"leaflet\"; // import everything from leaflet\n-import \"leaflet/dist/leaflet.css\"; // import leaflet css\n-\n-const EventCard = ({\n-  id,\n-  title,\n-  description,\n-  date,\n-  location,\n-  latitude,\n-  longitude\n-}) => {\n-  const mapRef = useRef(null);\n-  const mapInstanceRef = useRef(null);\n-\n-  useEffect(() => {\n-    if (mapRef.current && !mapInstanceRef.current) {\n-      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n-      const WBS = [latitude, longitude];\n-\n-      // create a map object with a center and zoom level\n-      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n-      mapInstanceRef.current = map;\n-\n-      const markerIcon = Leaflet.icon({\n-        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n-        iconAnchor: [10, 20]\n-      }); // There was an issue with the default marker icon, so we create a new one\n-\n-      Leaflet.marker(WBS, { icon: markerIcon })\n-        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n-        .addTo(map); // add a marker to the map at the WBS coordinates\n-\n-      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n-        maxZoom: 19,\n-        attribution:\n-          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n-      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n-    }\n-\n-    return () => {\n-      if (mapInstanceRef.current) {\n-        mapInstanceRef.current.remove();\n-        mapInstanceRef.current = null;\n-      }\n-    };\n-  }, [latitude, longitude]);\n-\n-  return (\n-    /*  <div className=\"h-full\">\n-      <h2>{title}</h2>\n-      <p>{description}</p>\n-      <p>{startDate}</p>\n-      <p>{location}</p>\n-      <div\n-        ref={mapRef}\n-        className=\"h-auto block w-full aspect-square object-contain\"\n-      ></div>\n-    </div> */\n-\n-    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n-      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n-        <h2 className=\"card-title\">{title}</h2>\n-        <div className=\"divider divider-neutral/50\"></div>\n-        <p className=\"card-text\">{description}</p>\n-        <div className=\"divider divider-neutral\"></div>\n-        <p>\n-          {date.split(\"T\")[0] +\n-            \" At \" +\n-            date.split(\"T\")[1].split(\":\")[0] +\n-            \":\" +\n-            date.split(\"T\")[1].split(\":\")[1]}\n-        </p>\n-        <p>{location}</p>\n-      </div>\n-\n-      <figure>\n-        <div\n-          ref={mapRef}\n-          className=\"block object-contain w-full bg-white h-auto aspect-square\"\n-        ></div>\n-      </figure>\n-    </div>\n-  );\n-};\n-\n-export default EventCard;\n"
                },
                {
                    "date": 1754437715974,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n         <div className=\"divider divider-neutral\"></div>\n         <p className=\"card-text\">{description}</p>\n-        <div className=\"divider divider-info mx-2\"></div>\n+        <div className=\"divider bg-amber-50 mx-2\"></div>\n         <p>\n           {date.split(\"T\")[0] +\n             \" At \" +\n             date.split(\"T\")[1].split(\":\")[0] +\n"
                },
                {
                    "date": 1754437749984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+import React, { useEffect, useRef } from \"react\";\n+import Leaflet from \"leaflet\"; // import everything from leaflet\n+import \"leaflet/dist/leaflet.css\"; // import leaflet css\n+\n+const EventCard = ({\n+  id,\n+  title,\n+  description,\n+  date,\n+  location,\n+  latitude,\n+  longitude\n+}) => {\n+  const mapRef = useRef(null);\n+  const mapInstanceRef = useRef(null);\n+\n+  useEffect(() => {\n+    if (mapRef.current && !mapInstanceRef.current) {\n+      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n+      const WBS = [latitude, longitude];\n+\n+      // create a map object with a center and zoom level\n+      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n+      mapInstanceRef.current = map;\n+\n+      const markerIcon = Leaflet.icon({\n+        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n+        iconAnchor: [10, 20]\n+      }); // There was an issue with the default marker icon, so we create a new one\n+\n+      Leaflet.marker(WBS, { icon: markerIcon })\n+        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n+        .addTo(map); // add a marker to the map at the WBS coordinates\n+\n+      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n+        maxZoom: 19,\n+        attribution:\n+          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n+      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n+    }\n+\n+    return () => {\n+      if (mapInstanceRef.current) {\n+        mapInstanceRef.current.remove();\n+        mapInstanceRef.current = null;\n+      }\n+    };\n+  }, [latitude, longitude]);\n+\n+  return (\n+    /*  <div className=\"h-full\">\n+      <h2>{title}</h2>\n+      <p>{description}</p>\n+      <p>{startDate}</p>\n+      <p>{location}</p>\n+      <div\n+        ref={mapRef}\n+        className=\"h-auto block w-full aspect-square object-contain\"\n+      ></div>\n+    </div> */\n+\n+    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n+      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n+        <h2 className=\"card-title\">{title}</h2>\n+        <div className=\"divider divider-neutral\"></div>\n+        <p className=\"card-text\">{description}</p>\n+        <div className=\"divider bg-neutral-50 mx-2\"></div>\n+        <p>\n+          {date.split(\"T\")[0] +\n+            \" At \" +\n+            date.split(\"T\")[1].split(\":\")[0] +\n+            \":\" +\n+            date.split(\"T\")[1].split(\":\")[1]}\n+        </p>\n+        <p>{location}</p>\n+      </div>\n+\n+      <figure>\n+        <div\n+          ref={mapRef}\n+          className=\"block object-contain w-full bg-white h-auto aspect-square\"\n+        ></div>\n+      </figure>\n+    </div>\n+  );\n+};\n+\n+export default EventCard;\n"
                },
                {
                    "date": 1754437766198,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n         <div className=\"divider divider-neutral\"></div>\n         <p className=\"card-text\">{description}</p>\n-        <div className=\"divider bg-neutral-50 mx-2\"></div>\n+        <div className=\"divider bg-neutral-60 mx-2\"></div>\n         <p>\n           {date.split(\"T\")[0] +\n             \" At \" +\n             date.split(\"T\")[1].split(\":\")[0] +\n"
                },
                {
                    "date": 1754437777781,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n         <div className=\"divider divider-neutral\"></div>\n         <p className=\"card-text\">{description}</p>\n-        <div className=\"divider bg-neutral-60 mx-2\"></div>\n+        <div className=\"divider bg-neutral-20 mx-2\"></div>\n         <p>\n           {date.split(\"T\")[0] +\n             \" At \" +\n             date.split(\"T\")[1].split(\":\")[0] +\n@@ -85,92 +85,4 @@\n   );\n };\n \n export default EventCard;\n-import React, { useEffect, useRef } from \"react\";\n-import Leaflet from \"leaflet\"; // import everything from leaflet\n-import \"leaflet/dist/leaflet.css\"; // import leaflet css\n-\n-const EventCard = ({\n-  id,\n-  title,\n-  description,\n-  date,\n-  location,\n-  latitude,\n-  longitude\n-}) => {\n-  const mapRef = useRef(null);\n-  const mapInstanceRef = useRef(null);\n-\n-  useEffect(() => {\n-    if (mapRef.current && !mapInstanceRef.current) {\n-      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n-      const WBS = [latitude, longitude];\n-\n-      // create a map object with a center and zoom level\n-      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n-      mapInstanceRef.current = map;\n-\n-      const markerIcon = Leaflet.icon({\n-        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n-        iconAnchor: [10, 20]\n-      }); // There was an issue with the default marker icon, so we create a new one\n-\n-      Leaflet.marker(WBS, { icon: markerIcon })\n-        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n-        .addTo(map); // add a marker to the map at the WBS coordinates\n-\n-      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n-        maxZoom: 19,\n-        attribution:\n-          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n-      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n-    }\n-\n-    return () => {\n-      if (mapInstanceRef.current) {\n-        mapInstanceRef.current.remove();\n-        mapInstanceRef.current = null;\n-      }\n-    };\n-  }, [latitude, longitude]);\n-\n-  return (\n-    /*  <div className=\"h-full\">\n-      <h2>{title}</h2>\n-      <p>{description}</p>\n-      <p>{startDate}</p>\n-      <p>{location}</p>\n-      <div\n-        ref={mapRef}\n-        className=\"h-auto block w-full aspect-square object-contain\"\n-      ></div>\n-    </div> */\n-\n-    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n-      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n-        <h2 className=\"card-title\">{title}</h2>\n-        <div className=\"divider divider-neutral\"></div>\n-        <p className=\"card-text\">{description}</p>\n-        <div className=\"divider bg-amber-50 mx-2\"></div>\n-        <p>\n-          {date.split(\"T\")[0] +\n-            \" At \" +\n-            date.split(\"T\")[1].split(\":\")[0] +\n-            \":\" +\n-            date.split(\"T\")[1].split(\":\")[1]}\n-        </p>\n-        <p>{location}</p>\n-      </div>\n-\n-      <figure>\n-        <div\n-          ref={mapRef}\n-          className=\"block object-contain w-full bg-white h-auto aspect-square\"\n-        ></div>\n-      </figure>\n-    </div>\n-  );\n-};\n-\n-export default EventCard;\n"
                },
                {
                    "date": 1754437809635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n         <div className=\"divider divider-neutral\"></div>\n         <p className=\"card-text\">{description}</p>\n-        <div className=\"divider bg-neutral-20 mx-2\"></div>\n+        <div className=\"divider bg-black-50 mx-2\"></div>\n         <p>\n           {date.split(\"T\")[0] +\n             \" At \" +\n             date.split(\"T\")[1].split(\":\")[0] +\n"
                },
                {
                    "date": 1754437833908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n         <div className=\"divider divider-neutral\"></div>\n         <p className=\"card-text\">{description}</p>\n-        <div className=\"divider bg-black-50 mx-2\"></div>\n+        <div className=\"divider bg-black-30 mx-2\"></div>\n         <p>\n           {date.split(\"T\")[0] +\n             \" At \" +\n             date.split(\"T\")[1].split(\":\")[0] +\n"
                },
                {
                    "date": 1754437844244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n         <div className=\"divider divider-neutral\"></div>\n         <p className=\"card-text\">{description}</p>\n-        <div className=\"divider bg-black-30 mx-2\"></div>\n+        <div className=\"divider bg-black-90 mx-2\"></div>\n         <p>\n           {date.split(\"T\")[0] +\n             \" At \" +\n             date.split(\"T\")[1].split(\":\")[0] +\n"
                },
                {
                    "date": 1754437867747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n         <div className=\"divider divider-neutral\"></div>\n         <p className=\"card-text\">{description}</p>\n-        <div className=\"divider bg-black-90 mx-2\"></div>\n+        <div className=\"divider text-info mx-2\"></div>\n         <p>\n           {date.split(\"T\")[0] +\n             \" At \" +\n             date.split(\"T\")[1].split(\":\")[0] +\n"
                },
                {
                    "date": 1754437886742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,11 +61,11 @@\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n-        <div className=\"divider divider-neutral\"></div>\n+        <div className=\"divider divider-info\"></div>\n         <p className=\"card-text\">{description}</p>\n-        <div className=\"divider text-info mx-2\"></div>\n+\n         <p>\n           {date.split(\"T\")[0] +\n             \" At \" +\n             date.split(\"T\")[1].split(\":\")[0] +\n"
                },
                {
                    "date": 1754437900291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n-        <div className=\"divider divider-info\"></div>\n+\n         <p className=\"card-text\">{description}</p>\n \n         <p>\n           {date.split(\"T\")[0] +\n"
                },
                {
                    "date": 1754437935988,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n \n-        <p className=\"card-text\">{description}</p>\n+        <p className=\"card-text border border-b-gray-300\">{description}</p>\n \n         <p>\n           {date.split(\"T\")[0] +\n             \" At \" +\n"
                },
                {
                    "date": 1754437966574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n \n-        <p className=\"card-text border border-b-gray-300\">{description}</p>\n+        <p className=\"card-text >{description}</p>\n \n         <p>\n           {date.split(\"T\")[0] +\n             \" At \" +\n"
                },
                {
                    "date": 1754438020986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+import React, { useEffect, useRef } from \"react\";\n+import Leaflet from \"leaflet\"; // import everything from leaflet\n+import \"leaflet/dist/leaflet.css\"; // import leaflet css\n+\n+const EventCard = ({\n+  id,\n+  title,\n+  description,\n+  date,\n+  location,\n+  latitude,\n+  longitude\n+}) => {\n+  const mapRef = useRef(null);\n+  const mapInstanceRef = useRef(null);\n+\n+  useEffect(() => {\n+    if (mapRef.current && !mapInstanceRef.current) {\n+      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n+      const WBS = [latitude, longitude];\n+\n+      // create a map object with a center and zoom level\n+      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n+      mapInstanceRef.current = map;\n+\n+      const markerIcon = Leaflet.icon({\n+        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n+        iconAnchor: [10, 20]\n+      }); // There was an issue with the default marker icon, so we create a new one\n+\n+      Leaflet.marker(WBS, { icon: markerIcon })\n+        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n+        .addTo(map); // add a marker to the map at the WBS coordinates\n+\n+      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n+        maxZoom: 19,\n+        attribution:\n+          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n+      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n+    }\n+\n+    return () => {\n+      if (mapInstanceRef.current) {\n+        mapInstanceRef.current.remove();\n+        mapInstanceRef.current = null;\n+      }\n+    };\n+  }, [latitude, longitude]);\n+\n+  return (\n+    /*  <div className=\"h-full\">\n+      <h2>{title}</h2>\n+      <p>{description}</p>\n+      <p>{startDate}</p>\n+      <p>{location}</p>\n+      <div\n+        ref={mapRef}\n+        className=\"h-auto block w-full aspect-square object-contain\"\n+      ></div>\n+    </div> */\n+\n+    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n+      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center divide-x-2 \">\n+        <h2 className=\"card-title\">{title}</h2>\n+\n+        <p className=\"card-text \">{description}</p>\n+\n+        <p>\n+          {date.split(\"T\")[0] +\n+            \" At \" +\n+            date.split(\"T\")[1].split(\":\")[0] +\n+            \":\" +\n+            date.split(\"T\")[1].split(\":\")[1]}\n+        </p>\n+        <p>{location}</p>\n+      </div>\n+\n+      <figure>\n+        <div\n+          ref={mapRef}\n+          className=\"block object-contain w-full bg-white h-auto aspect-square\"\n+        ></div>\n+      </figure>\n+    </div>\n+  );\n+};\n+\n+export default EventCard;\n"
                },
                {
                    "date": 1754438034098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n       ></div>\n     </div> */\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n-      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center divide-x-2 \">\n+      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center divide-y-2 \">\n         <h2 className=\"card-title\">{title}</h2>\n \n         <p className=\"card-text \">{description}</p>\n \n@@ -85,92 +85,4 @@\n   );\n };\n \n export default EventCard;\n-import React, { useEffect, useRef } from \"react\";\n-import Leaflet from \"leaflet\"; // import everything from leaflet\n-import \"leaflet/dist/leaflet.css\"; // import leaflet css\n-\n-const EventCard = ({\n-  id,\n-  title,\n-  description,\n-  date,\n-  location,\n-  latitude,\n-  longitude\n-}) => {\n-  const mapRef = useRef(null);\n-  const mapInstanceRef = useRef(null);\n-\n-  useEffect(() => {\n-    if (mapRef.current && !mapInstanceRef.current) {\n-      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n-      const WBS = [latitude, longitude];\n-\n-      // create a map object with a center and zoom level\n-      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n-      mapInstanceRef.current = map;\n-\n-      const markerIcon = Leaflet.icon({\n-        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n-        iconAnchor: [10, 20]\n-      }); // There was an issue with the default marker icon, so we create a new one\n-\n-      Leaflet.marker(WBS, { icon: markerIcon })\n-        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n-        .addTo(map); // add a marker to the map at the WBS coordinates\n-\n-      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n-        maxZoom: 19,\n-        attribution:\n-          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n-      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n-    }\n-\n-    return () => {\n-      if (mapInstanceRef.current) {\n-        mapInstanceRef.current.remove();\n-        mapInstanceRef.current = null;\n-      }\n-    };\n-  }, [latitude, longitude]);\n-\n-  return (\n-    /*  <div className=\"h-full\">\n-      <h2>{title}</h2>\n-      <p>{description}</p>\n-      <p>{startDate}</p>\n-      <p>{location}</p>\n-      <div\n-        ref={mapRef}\n-        className=\"h-auto block w-full aspect-square object-contain\"\n-      ></div>\n-    </div> */\n-\n-    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n-      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n-        <h2 className=\"card-title\">{title}</h2>\n-\n-        <p className=\"card-text >{description}</p>\n-\n-        <p>\n-          {date.split(\"T\")[0] +\n-            \" At \" +\n-            date.split(\"T\")[1].split(\":\")[0] +\n-            \":\" +\n-            date.split(\"T\")[1].split(\":\")[1]}\n-        </p>\n-        <p>{location}</p>\n-      </div>\n-\n-      <figure>\n-        <div\n-          ref={mapRef}\n-          className=\"block object-contain w-full bg-white h-auto aspect-square\"\n-        ></div>\n-      </figure>\n-    </div>\n-  );\n-};\n-\n-export default EventCard;\n"
                },
                {
                    "date": 1754438067721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n       ></div>\n     </div> */\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n-      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center divide-y-2 \">\n+      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center divide-y-2 w-2/3 \">\n         <h2 className=\"card-title\">{title}</h2>\n \n         <p className=\"card-text \">{description}</p>\n \n"
                },
                {
                    "date": 1754438083486,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n       ></div>\n     </div> */\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n-      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center divide-y-2 w-2/3 \">\n+      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center divide-y-2 mx-4 \">\n         <h2 className=\"card-title\">{title}</h2>\n \n         <p className=\"card-text \">{description}</p>\n \n"
                },
                {
                    "date": 1754438097643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n       ></div>\n     </div> */\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n-      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center divide-y-2 mx-4 \">\n+      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center divide-y-2 \">\n         <h2 className=\"card-title\">{title}</h2>\n \n         <p className=\"card-text \">{description}</p>\n \n"
                },
                {
                    "date": 1754438164629,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n       ></div>\n     </div> */\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n-      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center divide-y-2 \">\n+      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center divide-y-2  border-[2vw]\">\n         <h2 className=\"card-title\">{title}</h2>\n \n         <p className=\"card-text \">{description}</p>\n \n"
                },
                {
                    "date": 1754438190643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n       ></div>\n     </div> */\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n-      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center divide-y-2  border-[2vw]\">\n+      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center divide-y-2  \">\n         <h2 className=\"card-title\">{title}</h2>\n \n         <p className=\"card-text \">{description}</p>\n \n"
                },
                {
                    "date": 1754438212053,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,9 +59,9 @@\n       ></div>\n     </div> */\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n-      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center divide-y-2  \">\n+      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n         <h2 className=\"card-title\">{title}</h2>\n \n         <p className=\"card-text \">{description}</p>\n \n"
                },
                {
                    "date": 1754438239293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n     </div> */\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n-        <h2 className=\"card-title\">{title}</h2>\n+        <h2 className=\"card-title border border-base-300\">{title}</h2>\n \n         <p className=\"card-text \">{description}</p>\n \n         <p>\n"
                },
                {
                    "date": 1754438253493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+import React, { useEffect, useRef } from \"react\";\n+import Leaflet from \"leaflet\"; // import everything from leaflet\n+import \"leaflet/dist/leaflet.css\"; // import leaflet css\n+\n+const EventCard = ({\n+  id,\n+  title,\n+  description,\n+  date,\n+  location,\n+  latitude,\n+  longitude\n+}) => {\n+  const mapRef = useRef(null);\n+  const mapInstanceRef = useRef(null);\n+\n+  useEffect(() => {\n+    if (mapRef.current && !mapInstanceRef.current) {\n+      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n+      const WBS = [latitude, longitude];\n+\n+      // create a map object with a center and zoom level\n+      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n+      mapInstanceRef.current = map;\n+\n+      const markerIcon = Leaflet.icon({\n+        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n+        iconAnchor: [10, 20]\n+      }); // There was an issue with the default marker icon, so we create a new one\n+\n+      Leaflet.marker(WBS, { icon: markerIcon })\n+        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n+        .addTo(map); // add a marker to the map at the WBS coordinates\n+\n+      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n+        maxZoom: 19,\n+        attribution:\n+          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n+      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n+    }\n+\n+    return () => {\n+      if (mapInstanceRef.current) {\n+        mapInstanceRef.current.remove();\n+        mapInstanceRef.current = null;\n+      }\n+    };\n+  }, [latitude, longitude]);\n+\n+  return (\n+    /*  <div className=\"h-full\">\n+      <h2>{title}</h2>\n+      <p>{description}</p>\n+      <p>{startDate}</p>\n+      <p>{location}</p>\n+      <div\n+        ref={mapRef}\n+        className=\"h-auto block w-full aspect-square object-contain\"\n+      ></div>\n+    </div> */\n+\n+    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n+      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n+        <h2 className=\"card-title border border-b-base-300\">{title}</h2>\n+\n+        <p className=\"card-text \">{description}</p>\n+\n+        <p>\n+          {date.split(\"T\")[0] +\n+            \" At \" +\n+            date.split(\"T\")[1].split(\":\")[0] +\n+            \":\" +\n+            date.split(\"T\")[1].split(\":\")[1]}\n+        </p>\n+        <p>{location}</p>\n+      </div>\n+\n+      <figure>\n+        <div\n+          ref={mapRef}\n+          className=\"block object-contain w-full bg-white h-auto aspect-square\"\n+        ></div>\n+      </figure>\n+    </div>\n+  );\n+};\n+\n+export default EventCard;\n"
                },
                {
                    "date": 1754438278516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n     </div> */\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n-        <h2 className=\"card-title border border-b-base-300\">{title}</h2>\n+        <h2 className=\"card-title border border-b-gray-300\">{title}</h2>\n \n         <p className=\"card-text \">{description}</p>\n \n         <p>\n@@ -85,92 +85,4 @@\n   );\n };\n \n export default EventCard;\n-import React, { useEffect, useRef } from \"react\";\n-import Leaflet from \"leaflet\"; // import everything from leaflet\n-import \"leaflet/dist/leaflet.css\"; // import leaflet css\n-\n-const EventCard = ({\n-  id,\n-  title,\n-  description,\n-  date,\n-  location,\n-  latitude,\n-  longitude\n-}) => {\n-  const mapRef = useRef(null);\n-  const mapInstanceRef = useRef(null);\n-\n-  useEffect(() => {\n-    if (mapRef.current && !mapInstanceRef.current) {\n-      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n-      const WBS = [latitude, longitude];\n-\n-      // create a map object with a center and zoom level\n-      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n-      mapInstanceRef.current = map;\n-\n-      const markerIcon = Leaflet.icon({\n-        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n-        iconAnchor: [10, 20]\n-      }); // There was an issue with the default marker icon, so we create a new one\n-\n-      Leaflet.marker(WBS, { icon: markerIcon })\n-        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n-        .addTo(map); // add a marker to the map at the WBS coordinates\n-\n-      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n-        maxZoom: 19,\n-        attribution:\n-          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n-      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n-    }\n-\n-    return () => {\n-      if (mapInstanceRef.current) {\n-        mapInstanceRef.current.remove();\n-        mapInstanceRef.current = null;\n-      }\n-    };\n-  }, [latitude, longitude]);\n-\n-  return (\n-    /*  <div className=\"h-full\">\n-      <h2>{title}</h2>\n-      <p>{description}</p>\n-      <p>{startDate}</p>\n-      <p>{location}</p>\n-      <div\n-        ref={mapRef}\n-        className=\"h-auto block w-full aspect-square object-contain\"\n-      ></div>\n-    </div> */\n-\n-    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n-      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n-        <h2 className=\"card-title border border-base-300\">{title}</h2>\n-\n-        <p className=\"card-text \">{description}</p>\n-\n-        <p>\n-          {date.split(\"T\")[0] +\n-            \" At \" +\n-            date.split(\"T\")[1].split(\":\")[0] +\n-            \":\" +\n-            date.split(\"T\")[1].split(\":\")[1]}\n-        </p>\n-        <p>{location}</p>\n-      </div>\n-\n-      <figure>\n-        <div\n-          ref={mapRef}\n-          className=\"block object-contain w-full bg-white h-auto aspect-square\"\n-        ></div>\n-      </figure>\n-    </div>\n-  );\n-};\n-\n-export default EventCard;\n"
                },
                {
                    "date": 1754438293971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,9 +60,9 @@\n     </div> */\n \n     <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n       <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n-        <h2 className=\"card-title border border-b-gray-300\">{title}</h2>\n+        <h2 className=\"card-title border-b border-b-gray-300\">{title}</h2>\n \n         <p className=\"card-text \">{description}</p>\n \n         <p>\n"
                },
                {
                    "date": 1754440949898,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,62 @@\n+import React from \"react\";\n+import { useNavigate } from \"react-router\";\n+import \"leaflet/dist/leaflet.css\"; // import leaflet css\n+import useLeafletMap from \"../hooks/useLeafletMap\";\n+\n+const EventCard = ({\n+  id,\n+  title,\n+  description,\n+  date,\n+  location,\n+  latitude,\n+  longitude\n+}) => {\n+  const navigate = useNavigate();\n+  const mapRef = useLeafletMap(latitude, longitude, {\n+    zoom: 13,\n+    popupText: location\n+  });\n+\n+  return (\n+    /*  <div className=\"h-full\">\n+      <h2>{title}</h2>\n+      <p>{description}</p>\n+      <p>{startDate}</p>\n+      <p>{location}</p>\n+      <div\n+        ref={mapRef}\n+        className=\"h-auto block w-full aspect-square object-contain\"\n+      ></div>\n+    </div> */\n+\n+    <div\n+      onClick={() => navigate(`/events/${id}`)}\n+      className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \"\n+    >\n+      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n+        <h2 className=\"card-title border-b border-b-gray-300\">{title}</h2>\n+\n+        <p className=\"card-text \">{description}</p>\n+\n+        <p>\n+          {date.split(\"T\")[0] +\n+            \" At \" +\n+            date.split(\"T\")[1].split(\":\")[0] +\n+            \":\" +\n+            date.split(\"T\")[1].split(\":\")[1]}\n+        </p>\n+        <p>{location}</p>\n+      </div>\n+\n+      <figure>\n+        <div\n+          ref={mapRef}\n+          className=\"block object-contain w-full bg-white h-auto aspect-square\"\n+        ></div>\n+      </figure>\n+    </div>\n+  );\n+};\n+\n+export default EventCard;\n"
                },
                {
                    "date": 1754464333078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+import React from \"react\";\n+import { useNavigate } from \"react-router\";\n+import \"leaflet/dist/leaflet.css\"; // import leaflet css\n+import useLeafletMap from \"../hooks/useLeafletMap\";\n+\n+const EventCard = ({\n+  id,\n+  title,\n+  description,\n+  date,\n+  location,\n+  latitude,\n+  longitude\n+}) => {\n+  const navigate = useNavigate();\n+  const mapRef = useLeafletMap(latitude, longitude, {\n+    zoom: 13,\n+    popupText: location\n+  });\n+\n+  return (\n+    <div\n+      onClick={() => navigate(`/events/${id}`)}\n+      className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \"\n+    >\n+      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n+        <h2 className=\"card-title border-b border-b-gray-300 text-black\">\n+          {title}\n+        </h2>\n+\n+        <p className=\"card-text \">{description}</p>\n+\n+        <p>\n+          {date.split(\"T\")[0] +\n+            \" At \" +\n+            date.split(\"T\")[1].split(\":\")[0] +\n+            \":\" +\n+            date.split(\"T\")[1].split(\":\")[1]}\n+        </p>\n+        <p>{location}</p>\n+      </div>\n+\n+      <figure>\n+        <div\n+          ref={mapRef}\n+          className=\"block object-contain w-full bg-white h-auto aspect-square\"\n+        ></div>\n+      </figure>\n+    </div>\n+  );\n+};\n+\n+export default EventCard;\n"
                },
                {
                    "date": 1754464370867,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n             date.split(\"T\")[1].split(\":\")[0] +\n             \":\" +\n             date.split(\"T\")[1].split(\":\")[1]}\n         </p>\n-        <p>{location}</p>\n+        <p className=\"text-black\">{location}</p>\n       </div>\n \n       <figure>\n         <div\n@@ -50,154 +50,4 @@\n   );\n };\n \n export default EventCard;\n-import React from \"react\";\n-import { useNavigate } from \"react-router\";\n-import \"leaflet/dist/leaflet.css\"; // import leaflet css\n-import useLeafletMap from \"../hooks/useLeafletMap\";\n-\n-const EventCard = ({\n-  id,\n-  title,\n-  description,\n-  date,\n-  location,\n-  latitude,\n-  longitude\n-}) => {\n-  const navigate = useNavigate();\n-  const mapRef = useLeafletMap(latitude, longitude, {\n-    zoom: 13,\n-    popupText: location\n-  });\n-\n-  return (\n-    /*  <div className=\"h-full\">\n-      <h2>{title}</h2>\n-      <p>{description}</p>\n-      <p>{startDate}</p>\n-      <p>{location}</p>\n-      <div\n-        ref={mapRef}\n-        className=\"h-auto block w-full aspect-square object-contain\"\n-      ></div>\n-    </div> */\n-\n-    <div\n-      onClick={() => navigate(`/events/${id}`)}\n-      className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \"\n-    >\n-      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n-        <h2 className=\"card-title border-b border-b-gray-300\">{title}</h2>\n-\n-        <p className=\"card-text \">{description}</p>\n-\n-        <p>\n-          {date.split(\"T\")[0] +\n-            \" At \" +\n-            date.split(\"T\")[1].split(\":\")[0] +\n-            \":\" +\n-            date.split(\"T\")[1].split(\":\")[1]}\n-        </p>\n-        <p>{location}</p>\n-      </div>\n-\n-      <figure>\n-        <div\n-          ref={mapRef}\n-          className=\"block object-contain w-full bg-white h-auto aspect-square\"\n-        ></div>\n-      </figure>\n-    </div>\n-  );\n-};\n-\n-export default EventCard;\n-import React, { useEffect, useRef } from \"react\";\n-import Leaflet from \"leaflet\"; // import everything from leaflet\n-import \"leaflet/dist/leaflet.css\"; // import leaflet css\n-\n-const EventCard = ({\n-  id,\n-  title,\n-  description,\n-  date,\n-  location,\n-  latitude,\n-  longitude\n-}) => {\n-  const mapRef = useRef(null);\n-  const mapInstanceRef = useRef(null);\n-\n-  useEffect(() => {\n-    if (mapRef.current && !mapInstanceRef.current) {\n-      // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n-      const WBS = [latitude, longitude];\n-\n-      // create a map object with a center and zoom level\n-      const map = Leaflet.map(mapRef.current).setView(WBS, 13);\n-      mapInstanceRef.current = map;\n-\n-      const markerIcon = Leaflet.icon({\n-        iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n-        iconAnchor: [10, 20]\n-      }); // There was an issue with the default marker icon, so we create a new one\n-\n-      Leaflet.marker(WBS, { icon: markerIcon })\n-        .bindPopup(`${location}`) //to show a popup when the marker is clicked\n-        .addTo(map); // add a marker to the map at the WBS coordinates\n-\n-      Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n-        maxZoom: 19,\n-        attribution:\n-          '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n-      }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n-    }\n-\n-    return () => {\n-      if (mapInstanceRef.current) {\n-        mapInstanceRef.current.remove();\n-        mapInstanceRef.current = null;\n-      }\n-    };\n-  }, [latitude, longitude]);\n-\n-  return (\n-    /*  <div className=\"h-full\">\n-      <h2>{title}</h2>\n-      <p>{description}</p>\n-      <p>{startDate}</p>\n-      <p>{location}</p>\n-      <div\n-        ref={mapRef}\n-        className=\"h-auto block w-full aspect-square object-contain\"\n-      ></div>\n-    </div> */\n-\n-    <div className=\"card card-lg  bg-base-100 h-full shadow-sm  transition-transform duration-200 hover:scale-105 hover:drop-shadow-[0_0_10px_gray]  border rounded-lg space-y-2 pt-2 \">\n-      <div className=\"card-body px-0 py-0 space-y-2 items-center text-center  \">\n-        <h2 className=\"card-title border-b border-b-gray-300\">{title}</h2>\n-\n-        <p className=\"card-text \">{description}</p>\n-\n-        <p>\n-          {date.split(\"T\")[0] +\n-            \" At \" +\n-            date.split(\"T\")[1].split(\":\")[0] +\n-            \":\" +\n-            date.split(\"T\")[1].split(\":\")[1]}\n-        </p>\n-        <p>{location}</p>\n-      </div>\n-\n-      <figure>\n-        <div\n-          ref={mapRef}\n-          className=\"block object-contain w-full bg-white h-auto aspect-square\"\n-        ></div>\n-      </figure>\n-    </div>\n-  );\n-};\n-\n-export default EventCard;\n"
                }
            ],
            "date": 1754433393306,
            "name": "Commit-0",
            "content": "import React from \"react\";\nimport Leaflet from \"leaflet\"; // import everything from leaflet\nimport \"leaflet/dist/leaflet.css\"; // import leaflet css\n\nconst EventCard = ({\n  id,\n  title,\n  description,\n  startDate,\n  location,\n  latitude,\n  longitude\n}) => {\n  // create WBS coordinates (Breitengrad, Längengrad  for Achim)\n  const WBS = [latitude, longitude];\n\n  // create a map object with a center and zoom level\n  const map = Leaflet.map(\"map\").setView(WBS, 13);\n\n  const markerIcon = Leaflet.icon({\n    iconUrl: \"https://unpkg.com/leaflet@1.9.4/dist/images/marker-icon.png\",\n    iconAnchor: [10, 20]\n  }); // There was an issue with the default marker icon, so we create a new one\n\n  Leaflet.marker(WBS, { icon: markerIcon })\n    .bindPopup(\"My home is here!\") //to show a popup when the marker is clicked\n    .addTo(map); // add a marker to the map at the WBS coordinates\n\n  Leaflet.tileLayer(\"https://tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n    maxZoom: 19,\n    attribution:\n      '&copy; <a href=\"https://google.com\" target=\"_blank\">Google</a>'\n  }).addTo(map); // add a tile layer to the map, the tiles are those images that make up the map\n\n  return (\n    <div>\n      <h2>{title}</h2>\n      <p>{description}</p>\n      <p>{startDate}</p>\n      <p>{location}</p>\n      <div id=\"map\" class=\"h-auto\"></div>\n    </div>\n  );\n};\n\nexport default EventCard;\n"
        }
    ]
}