{
    "sourceFile": "src/pages/Homepage.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 51,
            "patches": [
                {
                    "date": 1754431310373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754431709986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,23 @@\n-import React from \"react\";\n+import React, { useEffect, useState } from \"react\";\n+// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n+const Homepage = () => {\n+  useEffect(() => {\n+    fetch(\"https://api.eventful.com/json/events?token=YOUR_API_TOKEN\")\n+      .then(response => response.json())\n+      .then(data => {\n+        console.log(data);\n+      });\n \n-const Homepage = () => {\n+    const fetchData = async () => {\n+      const response = await fetch(\"http://localhost:3001/api/events\", {\n+        method: \"GET\",\n+        headers: {\n+          \"Content-Type\": \"application/json\"\n+        }\n+      });\n+    };\n+  }, []);\n   return <div>Homepage</div>;\n };\n \n export default Homepage;\n"
                },
                {
                    "date": 1754431855717,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,15 +8,22 @@\n         console.log(data);\n       });\n \n     const fetchData = async () => {\n-      const response = await fetch(\"http://localhost:3001/api/events\", {\n-        method: \"GET\",\n-        headers: {\n-          \"Content-Type\": \"application/json\"\n-        }\n-      });\n-    };\n+\n+      try {\n+         const response = await fetch(\"http://localhost:3001/api/events\");\n+      if(!response.ok){\n+        throw new Error(\"Error fetching data\");\n+      }\n+      const data= await response.json();\n+      console.log(data);\n+      return data;\n+      } catch (error) {\n+\n+      }\n+\n+\n   }, []);\n   return <div>Homepage</div>;\n };\n \n"
                },
                {
                    "date": 1754431867838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,22 +8,18 @@\n         console.log(data);\n       });\n \n     const fetchData = async () => {\n-\n       try {\n-         const response = await fetch(\"http://localhost:3001/api/events\");\n-      if(!response.ok){\n-        throw new Error(\"Error fetching data\");\n-      }\n-      const data= await response.json();\n-      console.log(data);\n-      return data;\n-      } catch (error) {\n-\n-      }\n-\n-\n+        const response = await fetch(\"http://localhost:3001/api/events\");\n+        if (!response.ok) {\n+          throw new Error(\"Error fetching data\");\n+        }\n+        const data = await response.json();\n+        console.log(data);\n+        return data;\n+      } catch (error) {}\n+    };\n   }, []);\n   return <div>Homepage</div>;\n };\n \n"
                },
                {
                    "date": 1754431889700,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,29 @@\n+import React, { useEffect, useState } from \"react\";\n+// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n+const Homepage = () => {\n+  useEffect(() => {\n+    fetch(\"https://api.eventful.com/json/events?token=YOUR_API_TOKEN\")\n+      .then(response => response.json())\n+      .then(data => {\n+        console.log(data);\n+      });\n+\n+    const fetchData = async () => {\n+      try {\n+        const response = await fetch(\"http://localhost:3001/api/events\");\n+        if (!response.ok) {\n+          throw new Error(\"Error fetching data\");\n+        }\n+        const data = await response.json();\n+        console.log(data);\n+        return data;\n+      } catch (error) {\n+        console.error(error);\n+        return null;\n+      }\n+    };\n+  }, []);\n+  return <div>Homepage</div>;\n+};\n+\n+export default Homepage;\n"
                },
                {
                    "date": 1754431908863,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -21,34 +21,10 @@\n         console.error(error);\n         return null;\n       }\n     };\n-  }, []);\n-  return <div>Homepage</div>;\n-};\n \n-export default Homepage;\n-import React, { useEffect, useState } from \"react\";\n-// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n-const Homepage = () => {\n-  useEffect(() => {\n-    fetch(\"https://api.eventful.com/json/events?token=YOUR_API_TOKEN\")\n-      .then(response => response.json())\n-      .then(data => {\n-        console.log(data);\n-      });\n-\n-    const fetchData = async () => {\n-      try {\n-        const response = await fetch(\"http://localhost:3001/api/events\");\n-        if (!response.ok) {\n-          throw new Error(\"Error fetching data\");\n-        }\n-        const data = await response.json();\n-        console.log(data);\n-        return data;\n-      } catch (error) {}\n-    };\n+    fetchData();\n   }, []);\n   return <div>Homepage</div>;\n };\n \n"
                },
                {
                    "date": 1754431935871,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,8 @@\n import React, { useEffect, useState } from \"react\";\n // Fetch events (GET /api/events) and render them as cards sorted chronologically.\n const Homepage = () => {\n   useEffect(() => {\n-    fetch(\"https://api.eventful.com/json/events?token=YOUR_API_TOKEN\")\n-      .then(response => response.json())\n-      .then(data => {\n-        console.log(data);\n-      });\n-\n     const fetchData = async () => {\n       try {\n         const response = await fetch(\"http://localhost:3001/api/events\");\n         if (!response.ok) {\n"
                },
                {
                    "date": 1754432028462,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,10 @@\n import React, { useEffect, useState } from \"react\";\n // Fetch events (GET /api/events) and render them as cards sorted chronologically.\n const Homepage = () => {\n+  // State to store the events\n+  const [events, setEvents] = useState([]);\n+  // Fetch events from the server\n   useEffect(() => {\n     const fetchData = async () => {\n       try {\n         const response = await fetch(\"http://localhost:3001/api/events\");\n@@ -9,17 +12,30 @@\n           throw new Error(\"Error fetching data\");\n         }\n         const data = await response.json();\n         console.log(data);\n-        return data;\n+        // return data;\n+\n+        setEvents(data);\n       } catch (error) {\n         console.error(error);\n         return null;\n       }\n     };\n \n     fetchData();\n-  }, []);\n-  return <div>Homepage</div>;\n+  }, [events]);\n+  return (\n+    <div>\n+      {events.map((event, index) => (\n+        <div key={index}>\n+          <h2>{event.title}</h2>\n+          <p>{event.description}</p>\n+          <p>Starts at: {event.start}</p>\n+          <p>Ends at: {event.end}</p>\n+        </div>\n+      ))}\n+    </div>\n+  );\n };\n \n export default Homepage;\n"
                },
                {
                    "date": 1754432109551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,19 +23,8 @@\n     };\n \n     fetchData();\n   }, [events]);\n-  return (\n-    <div>\n-      {events.map((event, index) => (\n-        <div key={index}>\n-          <h2>{event.title}</h2>\n-          <p>{event.description}</p>\n-          <p>Starts at: {event.start}</p>\n-          <p>Ends at: {event.end}</p>\n-        </div>\n-      ))}\n-    </div>\n-  );\n+  return <div></div>;\n };\n \n export default Homepage;\n"
                },
                {
                    "date": 1754432247018,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,11 @@\n   // Fetch events from the server\n   useEffect(() => {\n     const fetchData = async () => {\n       try {\n-        const response = await fetch(\"http://localhost:3001/api/events\");\n+        const response = await fetch(\n+          \"http://localhost:3001/api/events?page=1&limit=10\"\n+        );\n         if (!response.ok) {\n           throw new Error(\"Error fetching data\");\n         }\n         const data = await response.json();\n"
                },
                {
                    "date": 1754432323001,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,32 @@\n+import React, { useEffect, useState } from \"react\";\n+// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n+const Homepage = () => {\n+  // State to store the events\n+  const [events, setEvents] = useState([]);\n+  // Fetch events from the server\n+  useEffect(() => {\n+    const fetchData = async () => {\n+      try {\n+        const response = await fetch(\n+          \"http://localhost:3001/api/events?page=1&limit=10\"\n+        );\n+        if (!response.ok) {\n+          throw new Error(\"Error fetching data\");\n+        }\n+        const data = await response.json();\n+        console.log(data);\n+        // return data;\n+\n+        return data;\n+      } catch (error) {\n+        console.error(error);\n+        return null;\n+      }\n+    };\n+\n+    fetchData();\n+  }, [events]);\n+  return <div></div>;\n+};\n+\n+export default Homepage;\n"
                },
                {
                    "date": 1754432403026,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,42 +15,10 @@\n         }\n         const data = await response.json();\n         console.log(data);\n         // return data;\n-\n-        return data;\n-      } catch (error) {\n-        console.error(error);\n-        return null;\n-      }\n-    };\n-\n-    fetchData();\n-  }, [events]);\n-  return <div></div>;\n-};\n-\n-export default Homepage;\n-import React, { useEffect, useState } from \"react\";\n-// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n-const Homepage = () => {\n-  // State to store the events\n-  const [events, setEvents] = useState([]);\n-  // Fetch events from the server\n-  useEffect(() => {\n-    const fetchData = async () => {\n-      try {\n-        const response = await fetch(\n-          \"http://localhost:3001/api/events?page=1&limit=10\"\n-        );\n-        if (!response.ok) {\n-          throw new Error(\"Error fetching data\");\n-        }\n-        const data = await response.json();\n-        console.log(data);\n+        setEvents(data);\n         // return data;\n-\n-        setEvents(data);\n       } catch (error) {\n         console.error(error);\n         return null;\n       }\n"
                },
                {
                    "date": 1754432427904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,32 @@\n+import React, { useEffect, useState } from \"react\";\n+// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n+const Homepage = () => {\n+  // State to store the events\n+  const [events, setEvents] = useState([]);\n+  // Fetch events from the server\n+  useEffect(() => {\n+    const fetchData = async () => {\n+      try {\n+        const response = await fetch(\n+          \"http://localhost:3001/api/events?page=1&limit=10\"\n+        );\n+        if (!response.ok) {\n+          throw new Error(\"Error fetching data\");\n+        }\n+        const data = await response.json();\n+        console.log(data);\n+        // return data;\n+        setEvents(data);\n+        // return data;\n+      } catch (error) {\n+        console.error(error);\n+        return null;\n+      }\n+    };\n+\n+    fetchData();\n+  }, []);\n+  return <div></div>;\n+};\n+\n+export default Homepage;\n"
                },
                {
                    "date": 1754432493347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,40 +25,14 @@\n     };\n \n     fetchData();\n   }, []);\n-  return <div></div>;\n+  return (\n+    <>\n+      {events.results.map((event, index) => {\n+        return <div key={index}>{event.title}</div>;\n+      })}\n+    </>\n+  );\n };\n \n export default Homepage;\n-import React, { useEffect, useState } from \"react\";\n-// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n-const Homepage = () => {\n-  // State to store the events\n-  const [events, setEvents] = useState([]);\n-  // Fetch events from the server\n-  useEffect(() => {\n-    const fetchData = async () => {\n-      try {\n-        const response = await fetch(\n-          \"http://localhost:3001/api/events?page=1&limit=10\"\n-        );\n-        if (!response.ok) {\n-          throw new Error(\"Error fetching data\");\n-        }\n-        const data = await response.json();\n-        console.log(data);\n-        // return data;\n-        setEvents(data);\n-        // return data;\n-      } catch (error) {\n-        console.error(error);\n-        return null;\n-      }\n-    };\n-\n-    fetchData();\n-  }, [events]);\n-  return <div></div>;\n-};\n-\n-export default Homepage;\n"
                },
                {
                    "date": 1754432517665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     fetchData();\n   }, []);\n   return (\n     <>\n-      {events.results.map((event, index) => {\n+      {events.result.map((event, index) => {\n         return <div key={index}>{event.title}</div>;\n       })}\n     </>\n   );\n"
                },
                {
                    "date": 1754432529904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,38 @@\n+import React, { useEffect, useState } from \"react\";\n+// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n+const Homepage = () => {\n+  // State to store the events\n+  const [events, setEvents] = useState([]);\n+  // Fetch events from the server\n+  useEffect(() => {\n+    const fetchData = async () => {\n+      try {\n+        const response = await fetch(\n+          \"http://localhost:3001/api/events?page=1&limit=10\"\n+        );\n+        if (!response.ok) {\n+          throw new Error(\"Error fetching data\");\n+        }\n+        const data = await response.json();\n+        console.log(data);\n+        // return data;\n+        setEvents(data);\n+        // return data;\n+      } catch (error) {\n+        console.error(error);\n+        return null;\n+      }\n+    };\n+\n+    fetchData();\n+  }, []);\n+  return (\n+    <>\n+      {events.map((event, index) => {\n+        return <div key={index}>{event.title}</div>;\n+      })}\n+    </>\n+  );\n+};\n+\n+export default Homepage;\n"
                },
                {
                    "date": 1754432590689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,38 @@\n+import React, { useEffect, useState } from \"react\";\n+// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n+const Homepage = () => {\n+  // State to store the events\n+  const [events, setEvents] = useState([]);\n+  // Fetch events from the server\n+  useEffect(() => {\n+    const fetchData = async () => {\n+      try {\n+        const response = await fetch(\n+          \"http://localhost:3001/api/events?page=1&limit=10\"\n+        );\n+        if (!response.ok) {\n+          throw new Error(\"Error fetching data\");\n+        }\n+        const data = await response.json();\n+        console.log(data);\n+        // return data;\n+        setEvents(data);\n+        // return data;\n+      } catch (error) {\n+        console.error(error);\n+        return null;\n+      }\n+    };\n+\n+    fetchData();\n+  }, []);\n+  return (\n+    <>\n+      {events[0].results.map((event, index) => {\n+        return <div key={index}>{event.title}</div>;\n+      })}\n+    </>\n+  );\n+};\n+\n+export default Homepage;\n"
                },
                {
                    "date": 1754432604985,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,40 @@\n+import React, { useEffect, useState } from \"react\";\n+// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n+const Homepage = () => {\n+  // State to store the events\n+  const [events, setEvents] = useState([]);\n+  // Fetch events from the server\n+  useEffect(() => {\n+    const fetchData = async () => {\n+      try {\n+        const response = await fetch(\n+          \"http://localhost:3001/api/events?page=1&limit=10\"\n+        );\n+        if (!response.ok) {\n+          throw new Error(\"Error fetching data\");\n+        }\n+        const data = await response.json();\n+        console.log(data);\n+        // return data;\n+        setEvents(data);\n+        // return data;\n+      } catch (error) {\n+        console.error(error);\n+        return null;\n+      }\n+    };\n+\n+    fetchData();\n+  }, []);\n+\n+  console.log(events);\n+  return (\n+    <>\n+      {events[0].results.map((event, index) => {\n+        return <div key={index}>{event.title}</div>;\n+      })}\n+    </>\n+  );\n+};\n+\n+export default Homepage;\n"
                },
                {
                    "date": 1754432614030,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n \n     fetchData();\n   }, []);\n \n-  console.log(events);\n+  console.log(\"events\", events);\n   return (\n     <>\n       {events[0].results.map((event, index) => {\n         return <div key={index}>{event.title}</div>;\n@@ -37,118 +37,4 @@\n   );\n };\n \n export default Homepage;\n-import React, { useEffect, useState } from \"react\";\n-// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n-const Homepage = () => {\n-  // State to store the events\n-  const [events, setEvents] = useState([]);\n-  // Fetch events from the server\n-  useEffect(() => {\n-    const fetchData = async () => {\n-      try {\n-        const response = await fetch(\n-          \"http://localhost:3001/api/events?page=1&limit=10\"\n-        );\n-        if (!response.ok) {\n-          throw new Error(\"Error fetching data\");\n-        }\n-        const data = await response.json();\n-        console.log(data);\n-        // return data;\n-        setEvents(data);\n-        // return data;\n-      } catch (error) {\n-        console.error(error);\n-        return null;\n-      }\n-    };\n-\n-    fetchData();\n-  }, []);\n-  return (\n-    <>\n-      {events[0].results.map((event, index) => {\n-        return <div key={index}>{event.title}</div>;\n-      })}\n-    </>\n-  );\n-};\n-\n-export default Homepage;\n-import React, { useEffect, useState } from \"react\";\n-// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n-const Homepage = () => {\n-  // State to store the events\n-  const [events, setEvents] = useState([]);\n-  // Fetch events from the server\n-  useEffect(() => {\n-    const fetchData = async () => {\n-      try {\n-        const response = await fetch(\n-          \"http://localhost:3001/api/events?page=1&limit=10\"\n-        );\n-        if (!response.ok) {\n-          throw new Error(\"Error fetching data\");\n-        }\n-        const data = await response.json();\n-        console.log(data);\n-        // return data;\n-        setEvents(data);\n-        // return data;\n-      } catch (error) {\n-        console.error(error);\n-        return null;\n-      }\n-    };\n-\n-    fetchData();\n-  }, []);\n-  return (\n-    <>\n-      {events.map((event, index) => {\n-        return <div key={index}>{event.title}</div>;\n-      })}\n-    </>\n-  );\n-};\n-\n-export default Homepage;\n-import React, { useEffect, useState } from \"react\";\n-// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n-const Homepage = () => {\n-  // State to store the events\n-  const [events, setEvents] = useState([]);\n-  // Fetch events from the server\n-  useEffect(() => {\n-    const fetchData = async () => {\n-      try {\n-        const response = await fetch(\n-          \"http://localhost:3001/api/events?page=1&limit=10\"\n-        );\n-        if (!response.ok) {\n-          throw new Error(\"Error fetching data\");\n-        }\n-        const data = await response.json();\n-        console.log(data);\n-        // return data;\n-        setEvents(data);\n-        // return data;\n-      } catch (error) {\n-        console.error(error);\n-        return null;\n-      }\n-    };\n-\n-    fetchData();\n-  }, []);\n-  return (\n-    <>\n-      {events.result.map((event, index) => {\n-        return <div key={index}>{event.title}</div>;\n-      })}\n-    </>\n-  );\n-};\n-\n-export default Homepage;\n"
                },
                {
                    "date": 1754432682657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n         if (!response.ok) {\n           throw new Error(\"Error fetching data\");\n         }\n         const data = await response.json();\n-        console.log(data);\n+        console.log(\"data\", data);\n         // return data;\n         setEvents(data);\n         // return data;\n       } catch (error) {\n@@ -26,9 +26,9 @@\n \n     fetchData();\n   }, []);\n \n-  console.log(\"events\", events);\n+  // console.log(\"events\", events);\n   return (\n     <>\n       {events[0].results.map((event, index) => {\n         return <div key={index}>{event.title}</div>;\n"
                },
                {
                    "date": 1754432713393,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,11 +29,9 @@\n \n   // console.log(\"events\", events);\n   return (\n     <>\n-      {events[0].results.map((event, index) => {\n-        return <div key={index}>{event.title}</div>;\n-      })}\n+      <h1>cool</h1>\n     </>\n   );\n };\n \n"
                },
                {
                    "date": 1754432835141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,38 @@\n+import React, { useEffect, useState } from \"react\";\n+// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n+const Homepage = () => {\n+  // State to store the events\n+  const [events, setEvents] = useState([]);\n+  // Fetch events from the server\n+  useEffect(() => {\n+    const fetchData = async () => {\n+      try {\n+        const response = await fetch(\n+          \"http://localhost:3001/api/events?page=1&limit=10\"\n+        );\n+        if (!response.ok) {\n+          throw new Error(\"Error fetching data\");\n+        }\n+        const data = await response.json();\n+        console.log(\"data\", data);\n+        // return data;\n+        setEvents(data.results);\n+        // return data;\n+      } catch (error) {\n+        console.error(error);\n+        return null;\n+      }\n+    };\n+\n+    fetchData();\n+  }, []);\n+\n+  // console.log(\"events\", events);\n+  return (\n+    <>\n+      <h1>cool</h1>\n+    </>\n+  );\n+};\n+\n+export default Homepage;\n"
                },
                {
                    "date": 1754432858227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,38 @@\n+import React, { useEffect, useState } from \"react\";\n+// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n+const Homepage = () => {\n+  // State to store the events\n+  const [events, setEvents] = useState([]);\n+  // Fetch events from the server\n+  useEffect(() => {\n+    const fetchData = async () => {\n+      try {\n+        const response = await fetch(\n+          \"http://localhost:3001/api/events?page=1&limit=10\"\n+        );\n+        if (!response.ok) {\n+          throw new Error(\"Error fetching data\");\n+        }\n+        const data = await response.json();\n+        console.log(\"data\", data);\n+        // return data;\n+        setEvents(data.results);\n+        // return data;\n+      } catch (error) {\n+        console.error(error);\n+        return null;\n+      }\n+    };\n+\n+    fetchData();\n+  }, []);\n+\n+  console.log(\"events\", events);\n+  return (\n+    <>\n+      <h1>cool</h1>\n+    </>\n+  );\n+};\n+\n+export default Homepage;\n"
                },
                {
                    "date": 1754432916350,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,40 @@\n+import React, { useEffect, useState } from \"react\";\n+// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n+const Homepage = () => {\n+  // State to store the events\n+  const [events, setEvents] = useState([]);\n+  // Fetch events from the server\n+  useEffect(() => {\n+    const fetchData = async () => {\n+      try {\n+        const response = await fetch(\n+          \"http://localhost:3001/api/events?page=1&limit=10\"\n+        );\n+        if (!response.ok) {\n+          throw new Error(\"Error fetching data\");\n+        }\n+        const data = await response.json();\n+        console.log(\"data\", data);\n+        // return data;\n+        setEvents(data.results);\n+        // return data;\n+      } catch (error) {\n+        console.error(error);\n+        return null;\n+      }\n+    };\n+\n+    fetchData();\n+  }, []);\n+\n+  console.log(\"events\", events);\n+  return (\n+    <>\n+      {events.map((event)=>{\n+        return <EventCard key={event.id} {...event}/>\n+      }}\n+    </>\n+  );\n+};\n+\n+export default Homepage;\n"
                },
                {
                    "date": 1754433572061,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,6 @@\n import React, { useEffect, useState } from \"react\";\n+import EventCard from \"../components/EventCard\";\n // Fetch events (GET /api/events) and render them as cards sorted chronologically.\n const Homepage = () => {\n   // State to store the events\n   const [events, setEvents] = useState([]);\n@@ -37,118 +38,4 @@\n   );\n };\n \n export default Homepage;\n-import React, { useEffect, useState } from \"react\";\n-// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n-const Homepage = () => {\n-  // State to store the events\n-  const [events, setEvents] = useState([]);\n-  // Fetch events from the server\n-  useEffect(() => {\n-    const fetchData = async () => {\n-      try {\n-        const response = await fetch(\n-          \"http://localhost:3001/api/events?page=1&limit=10\"\n-        );\n-        if (!response.ok) {\n-          throw new Error(\"Error fetching data\");\n-        }\n-        const data = await response.json();\n-        console.log(\"data\", data);\n-        // return data;\n-        setEvents(data.results);\n-        // return data;\n-      } catch (error) {\n-        console.error(error);\n-        return null;\n-      }\n-    };\n-\n-    fetchData();\n-  }, []);\n-\n-  console.log(\"events\", events);\n-  return (\n-    <>\n-      <h1>cool</h1>\n-    </>\n-  );\n-};\n-\n-export default Homepage;\n-import React, { useEffect, useState } from \"react\";\n-// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n-const Homepage = () => {\n-  // State to store the events\n-  const [events, setEvents] = useState([]);\n-  // Fetch events from the server\n-  useEffect(() => {\n-    const fetchData = async () => {\n-      try {\n-        const response = await fetch(\n-          \"http://localhost:3001/api/events?page=1&limit=10\"\n-        );\n-        if (!response.ok) {\n-          throw new Error(\"Error fetching data\");\n-        }\n-        const data = await response.json();\n-        console.log(\"data\", data);\n-        // return data;\n-        setEvents(data.results);\n-        // return data;\n-      } catch (error) {\n-        console.error(error);\n-        return null;\n-      }\n-    };\n-\n-    fetchData();\n-  }, []);\n-\n-  // console.log(\"events\", events);\n-  return (\n-    <>\n-      <h1>cool</h1>\n-    </>\n-  );\n-};\n-\n-export default Homepage;\n-import React, { useEffect, useState } from \"react\";\n-// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n-const Homepage = () => {\n-  // State to store the events\n-  const [events, setEvents] = useState([]);\n-  // Fetch events from the server\n-  useEffect(() => {\n-    const fetchData = async () => {\n-      try {\n-        const response = await fetch(\n-          \"http://localhost:3001/api/events?page=1&limit=10\"\n-        );\n-        if (!response.ok) {\n-          throw new Error(\"Error fetching data\");\n-        }\n-        const data = await response.json();\n-        console.log(\"data\", data);\n-        // return data;\n-        setEvents(data);\n-        // return data;\n-      } catch (error) {\n-        console.error(error);\n-        return null;\n-      }\n-    };\n-\n-    fetchData();\n-  }, []);\n-\n-  // console.log(\"events\", events);\n-  return (\n-    <>\n-      <h1>cool</h1>\n-    </>\n-  );\n-};\n-\n-export default Homepage;\n"
                },
                {
                    "date": 1754433606946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,11 +30,11 @@\n \n   console.log(\"events\", events);\n   return (\n     <>\n-      {events.map((event)=>{\n-        return <EventCard key={event.id} {...event}/>\n-      }}\n+      {events.map(event => {\n+        return <EventCard key={event.id} {...event} />;\n+      })}\n     </>\n   );\n };\n \n"
                },
                {
                    "date": 1754433983635,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,41 @@\n+import React, { useEffect, useState } from \"react\";\n+import EventCard from \"../components/EventCard\";\n+// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n+const Homepage = () => {\n+  // State to store the events\n+  const [events, setEvents] = useState([]);\n+  // Fetch events from the server\n+  useEffect(() => {\n+    const fetchData = async () => {\n+      try {\n+        const response = await fetch(\n+          \"http://localhost:3001/api/events?page=1&limit=10\"\n+        );\n+        if (!response.ok) {\n+          throw new Error(\"Error fetching data\");\n+        }\n+        const data = await response.json();\n+        console.log(\"data\", data);\n+        // return data;\n+        setEvents(data.results);\n+        // return data;\n+      } catch (error) {\n+        console.error(error);\n+        return null;\n+      }\n+    };\n+\n+    fetchData();\n+  }, []);\n+\n+  console.log(\"events\", events);\n+  return (\n+    <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4\">\n+      {events.map(event => {\n+        return <EventCard key={event.id} {...event} />;\n+      })}\n+    </div>\n+  );\n+};\n+\n+export default Homepage;\n"
                },
                {
                    "date": 1754434145164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n   }, []);\n \n   console.log(\"events\", events);\n   return (\n-    <div className=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-5 gap-4\">\n+    <div className=\"min-h-full grid grid-cols-2 md:grid-cols-3 lg:grid-cols-[auto-fill, minmax(250px, 1fr)] gap-4\">\n       {events.map(event => {\n         return <EventCard key={event.id} {...event} />;\n       })}\n     </div>\n"
                },
                {
                    "date": 1754434307310,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n   }, []);\n \n   console.log(\"events\", events);\n   return (\n-    <div className=\"min-h-full grid grid-cols-2 md:grid-cols-3 lg:grid-cols-[auto-fill, minmax(250px, 1fr)] gap-4\">\n+    <div className=\"min-h-full grid  grid-cols-2 sm:grid-cols-3 md:grid-cols-5 lg:grid-cols-[auto-fill, minmax(250px, 1fr)] gap-4\">\n       {events.map(event => {\n         return <EventCard key={event.id} {...event} />;\n       })}\n     </div>\n"
                },
                {
                    "date": 1754434644600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,41 @@\n+import React, { useEffect, useState } from \"react\";\n+import EventCard from \"../components/EventCard\";\n+// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n+const Homepage = () => {\n+  // State to store the events\n+  const [events, setEvents] = useState([]);\n+  // Fetch events from the server\n+  useEffect(() => {\n+    const fetchData = async () => {\n+      try {\n+        const response = await fetch(\n+          \"http://localhost:3001/api/events?page=1&limit=10\"\n+        );\n+        if (!response.ok) {\n+          throw new Error(\"Error fetching data\");\n+        }\n+        const data = await response.json();\n+        console.log(\"data\", data);\n+        // return data;\n+        setEvents(data.results);\n+        // return data;\n+      } catch (error) {\n+        console.error(error);\n+        return null;\n+      }\n+    };\n+\n+    fetchData();\n+  }, []);\n+\n+  console.log(\"events\", events);\n+  return (\n+    <div className=\"grid min-h-full grid-cols-2 gap-6 mx-0 my-6 text-gray-400 md:grid-cols-3 lg:grid-cols-[repeat(auto-fill,minmax(300px,1fr))] place-content-center sm:mx-6 auto-rows-min \">\n+      {events.map(event => {\n+        return <EventCard key={event.id} {...event} />;\n+      })}\n+    </div>\n+  );\n+};\n+\n+export default Homepage;\n"
                },
                {
                    "date": 1754435578158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,9 +29,9 @@\n   }, []);\n \n   console.log(\"events\", events);\n   return (\n-    <div className=\"grid min-h-full grid-cols-2 gap-6 mx-0 my-6 text-gray-400 md:grid-cols-3 lg:grid-cols-[repeat(auto-fill,minmax(300px,1fr))] place-content-center sm:mx-6 auto-rows-min \">\n+    <div className=\"grid min-h-full grid-cols-2 gap-6 mx-0 my-6 text-gray-400 md:grid-cols-3 lg:grid-cols-[repeat(auto-fill,minmax(300px,1fr))]  sm:mx-6 auto-rows-min \">\n       {events.map(event => {\n         return <EventCard key={event.id} {...event} />;\n       })}\n     </div>\n"
                },
                {
                    "date": 1754435620186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   useEffect(() => {\n     const fetchData = async () => {\n       try {\n         const response = await fetch(\n-          \"http://localhost:3001/api/events?page=1&limit=10\"\n+          \"http://localhost:3001/api/events?page=1&limit=20\"\n         );\n         if (!response.ok) {\n           throw new Error(\"Error fetching data\");\n         }\n"
                },
                {
                    "date": 1754435637217,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   useEffect(() => {\n     const fetchData = async () => {\n       try {\n         const response = await fetch(\n-          \"http://localhost:3001/api/events?page=1&limit=20\"\n+          \"http://localhost:3001/api/events?page=2&limit=10\"\n         );\n         if (!response.ok) {\n           throw new Error(\"Error fetching data\");\n         }\n"
                },
                {
                    "date": 1754435652782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   useEffect(() => {\n     const fetchData = async () => {\n       try {\n         const response = await fetch(\n-          \"http://localhost:3001/api/events?page=2&limit=10\"\n+          \"http://localhost:3001/api/events?page=1&limit=10\"\n         );\n         if (!response.ok) {\n           throw new Error(\"Error fetching data\");\n         }\n"
                },
                {
                    "date": 1754435723896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,11 +7,9 @@\n   // Fetch events from the server\n   useEffect(() => {\n     const fetchData = async () => {\n       try {\n-        const response = await fetch(\n-          \"http://localhost:3001/api/events?page=1&limit=10\"\n-        );\n+        const response = await fetch(\"http://localhost:3001/api/events\");\n         if (!response.ok) {\n           throw new Error(\"Error fetching data\");\n         }\n         const data = await response.json();\n@@ -38,86 +36,4 @@\n   );\n };\n \n export default Homepage;\n-import React, { useEffect, useState } from \"react\";\n-import EventCard from \"../components/EventCard\";\n-// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n-const Homepage = () => {\n-  // State to store the events\n-  const [events, setEvents] = useState([]);\n-  // Fetch events from the server\n-  useEffect(() => {\n-    const fetchData = async () => {\n-      try {\n-        const response = await fetch(\n-          \"http://localhost:3001/api/events?page=1&limit=10\"\n-        );\n-        if (!response.ok) {\n-          throw new Error(\"Error fetching data\");\n-        }\n-        const data = await response.json();\n-        console.log(\"data\", data);\n-        // return data;\n-        setEvents(data.results);\n-        // return data;\n-      } catch (error) {\n-        console.error(error);\n-        return null;\n-      }\n-    };\n-\n-    fetchData();\n-  }, []);\n-\n-  console.log(\"events\", events);\n-  return (\n-    <div className=\"min-h-full grid  grid-cols-2 sm:grid-cols-3 md:grid-cols-5 lg:grid-cols-[auto-fill, minmax(250px, 1fr)] gap-4\">\n-      {events.map(event => {\n-        return <EventCard key={event.id} {...event} />;\n-      })}\n-    </div>\n-  );\n-};\n-\n-export default Homepage;\n-import React, { useEffect, useState } from \"react\";\n-import EventCard from \"../components/EventCard\";\n-// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n-const Homepage = () => {\n-  // State to store the events\n-  const [events, setEvents] = useState([]);\n-  // Fetch events from the server\n-  useEffect(() => {\n-    const fetchData = async () => {\n-      try {\n-        const response = await fetch(\n-          \"http://localhost:3001/api/events?page=1&limit=10\"\n-        );\n-        if (!response.ok) {\n-          throw new Error(\"Error fetching data\");\n-        }\n-        const data = await response.json();\n-        console.log(\"data\", data);\n-        // return data;\n-        setEvents(data.results);\n-        // return data;\n-      } catch (error) {\n-        console.error(error);\n-        return null;\n-      }\n-    };\n-\n-    fetchData();\n-  }, []);\n-\n-  console.log(\"events\", events);\n-  return (\n-    <>\n-      {events.map(event => {\n-        return <EventCard key={event.id} {...event} />;\n-      })}\n-    </>\n-  );\n-};\n-\n-export default Homepage;\n"
                },
                {
                    "date": 1754435822218,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   }, []);\n \n   console.log(\"events\", events);\n   return (\n-    <div className=\"grid min-h-full grid-cols-2 gap-6 mx-0 my-6 text-gray-400 md:grid-cols-3 lg:grid-cols-[repeat(auto-fill,minmax(300px,1fr))]  sm:mx-6 auto-rows-min \">\n+    <div className=\"grid min-h-full  gap-6 mx-0 my-6 text-gray-400 grid-cols-[repeat(auto-fill,minmax(300px,1fr))]  sm:mx-6 auto-rows-min \">\n       {events.map(event => {\n         return <EventCard key={event.id} {...event} />;\n       })}\n     </div>\n"
                },
                {
                    "date": 1754435866828,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   }, []);\n \n   console.log(\"events\", events);\n   return (\n-    <div className=\"grid min-h-full  gap-6 mx-0 my-6 text-gray-400 grid-cols-[repeat(auto-fill,minmax(300px,1fr))]  sm:mx-6 auto-rows-min \">\n+    <div className=\"grid min-h-full  gap-6 mx-0 my-6 text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(300px,1fr))]  sm:mx-6 auto-rows-min \">\n       {events.map(event => {\n         return <EventCard key={event.id} {...event} />;\n       })}\n     </div>\n"
                },
                {
                    "date": 1754435997981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   }, []);\n \n   console.log(\"events\", events);\n   return (\n-    <div className=\"grid min-h-full  gap-6 mx-0 my-6 text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(300px,1fr))]  sm:mx-6 auto-rows-min \">\n+    <div className=\"grid min-h-full  gap-6 mx-0 space-y-4 text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(300px,1fr))]  sm:mx-6 auto-rows-min \">\n       {events.map(event => {\n         return <EventCard key={event.id} {...event} />;\n       })}\n     </div>\n"
                },
                {
                    "date": 1754436006138,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   }, []);\n \n   console.log(\"events\", events);\n   return (\n-    <div className=\"grid min-h-full  gap-6 mx-0 space-y-4 text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(300px,1fr))]  sm:mx-6 auto-rows-min \">\n+    <div className=\"grid min-h-full  gap-6 mx-0 space-y-2 text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(300px,1fr))]  sm:mx-6 auto-rows-min \">\n       {events.map(event => {\n         return <EventCard key={event.id} {...event} />;\n       })}\n     </div>\n"
                },
                {
                    "date": 1754436028917,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   }, []);\n \n   console.log(\"events\", events);\n   return (\n-    <div className=\"grid min-h-full  gap-6 mx-0 space-y-2 text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(300px,1fr))]  sm:mx-6 auto-rows-min \">\n+    <div className=\"grid min-h-full  gap-6 mx-0  text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(300px,1fr))]  sm:mx-6 auto-rows-min \">\n       {events.map(event => {\n         return <EventCard key={event.id} {...event} />;\n       })}\n     </div>\n"
                },
                {
                    "date": 1754436058029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   }, []);\n \n   console.log(\"events\", events);\n   return (\n-    <div className=\"grid min-h-full  gap-6 mx-0  text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(300px,1fr))]  sm:mx-6 auto-rows-min \">\n+    <div className=\"grid min-h-full  gap-6 mx-0 my-16 text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(300px,1fr))]  sm:mx-6 auto-rows-min \">\n       {events.map(event => {\n         return <EventCard key={event.id} {...event} />;\n       })}\n     </div>\n"
                },
                {
                    "date": 1754436084578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   }, []);\n \n   console.log(\"events\", events);\n   return (\n-    <div className=\"grid min-h-full  gap-6 mx-0 my-16 text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(300px,1fr))]  sm:mx-6 auto-rows-min \">\n+    <div className=\"grid min-h-full  gap-6 mx-0 my-16 text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(300px,1fr))]  sm:px-6 auto-rows-min \">\n       {events.map(event => {\n         return <EventCard key={event.id} {...event} />;\n       })}\n     </div>\n"
                },
                {
                    "date": 1754436110200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   }, []);\n \n   console.log(\"events\", events);\n   return (\n-    <div className=\"grid min-h-full  gap-6 mx-0 my-16 text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(300px,1fr))]  sm:px-6 auto-rows-min \">\n+    <div className=\"grid min-h-full  gap-6 mx-0 my-16 text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(2500px,1fr))]  sm:mx-6 auto-rows-min \">\n       {events.map(event => {\n         return <EventCard key={event.id} {...event} />;\n       })}\n     </div>\n"
                },
                {
                    "date": 1754437070564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   }, []);\n \n   console.log(\"events\", events);\n   return (\n-    <div className=\"grid min-h-full  gap-6 mx-0 my-16 text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(2500px,1fr))]  sm:mx-6 auto-rows-min \">\n+    <div className=\"grid min-h-full  gap-6 mx-0 my-16 text-gray-400 grid-cols-[250px] sm:grid-cols-[repeat(auto-fill,minmax(250px,1fr))]  sm:mx-6 auto-rows-min \">\n       {events.map(event => {\n         return <EventCard key={event.id} {...event} />;\n       })}\n     </div>\n"
                },
                {
                    "date": 1754437106841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   }, []);\n \n   console.log(\"events\", events);\n   return (\n-    <div className=\"grid min-h-full  gap-6 mx-0 my-16 text-gray-400 grid-cols-[250px] sm:grid-cols-[repeat(auto-fill,minmax(250px,1fr))]  sm:mx-6 auto-rows-min \">\n+    <div className=\"grid min-h-full  gap-6  mx-0 my-16 text-gray-400 grid-cols-[1fr] sm:grid-cols-[repeat(auto-fill,minmax(250px,1fr))]  sm:mx-6 auto-rows-min \">\n       {events.map(event => {\n         return <EventCard key={event.id} {...event} />;\n       })}\n     </div>\n"
                },
                {
                    "date": 1754437123243,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n   }, []);\n \n   console.log(\"events\", events);\n   return (\n-    <div className=\"grid min-h-full  gap-6  mx-0 my-16 text-gray-400 grid-cols-[1fr] sm:grid-cols-[repeat(auto-fill,minmax(250px,1fr))]  sm:mx-6 auto-rows-min \">\n+    <div className=\"grid min-h-full  gap-6  mx-0 my-16 text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(250px,1fr))]  sm:mx-6 auto-rows-min \">\n       {events.map(event => {\n         return <EventCard key={event.id} {...event} />;\n       })}\n     </div>\n"
                },
                {
                    "date": 1754437275905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,39 @@\n+import React, { useEffect, useState } from \"react\";\n+import EventCard from \"../components/EventCard\";\n+// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n+const Homepage = () => {\n+  // State to store the events\n+  const [events, setEvents] = useState([]);\n+  // Fetch events from the server\n+  useEffect(() => {\n+    const fetchData = async () => {\n+      try {\n+        const response = await fetch(\"http://localhost:3001/api/events\");\n+        if (!response.ok) {\n+          throw new Error(\"Error fetching data\");\n+        }\n+        const data = await response.json();\n+        console.log(\"data\", data);\n+        // return data;\n+        setEvents(data.results);\n+        // return data;\n+      } catch (error) {\n+        console.error(error);\n+        return null;\n+      }\n+    };\n+\n+    fetchData();\n+  }, []);\n+\n+  console.log(\"events\", events);\n+  return (\n+    <div className=\"grid min-h-full  gap-6  mx-0 my-16 text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(250px,1fr))]   auto-rows-min \">\n+      {events.map(event => {\n+        return <EventCard key={event.id} {...event} />;\n+      })}\n+    </div>\n+  );\n+};\n+\n+export default Homepage;\n"
                },
                {
                    "date": 1754443508132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,32 +1,12 @@\n import React, { useEffect, useState } from \"react\";\n import EventCard from \"../components/EventCard\";\n+\n+import useEvents from \"../hooks/useEvents\";\n // Fetch events (GET /api/events) and render them as cards sorted chronologically.\n const Homepage = () => {\n-  // State to store the events\n-  const [events, setEvents] = useState([]);\n-  // Fetch events from the server\n-  useEffect(() => {\n-    const fetchData = async () => {\n-      try {\n-        const response = await fetch(\"http://localhost:3001/api/events\");\n-        if (!response.ok) {\n-          throw new Error(\"Error fetching data\");\n-        }\n-        const data = await response.json();\n-        console.log(\"data\", data);\n-        // return data;\n-        setEvents(data.results);\n-        // return data;\n-      } catch (error) {\n-        console.error(error);\n-        return null;\n-      }\n-    };\n+  const { events, setEvents } = useEvents();\n \n-    fetchData();\n-  }, []);\n-\n   console.log(\"events\", events);\n   return (\n     <div className=\"grid min-h-full  gap-6  mx-0 my-16 text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(250px,1fr))]   auto-rows-min \">\n       {events.map(event => {\n@@ -36,43 +16,4 @@\n   );\n };\n \n export default Homepage;\n-import React, { useEffect, useState } from \"react\";\n-import EventCard from \"../components/EventCard\";\n-// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n-const Homepage = () => {\n-  // State to store the events\n-  const [events, setEvents] = useState([]);\n-  // Fetch events from the server\n-  useEffect(() => {\n-    const fetchData = async () => {\n-      try {\n-        const response = await fetch(\"http://localhost:3001/api/events\");\n-        if (!response.ok) {\n-          throw new Error(\"Error fetching data\");\n-        }\n-        const data = await response.json();\n-        console.log(\"data\", data);\n-        // return data;\n-        setEvents(data.results);\n-        // return data;\n-      } catch (error) {\n-        console.error(error);\n-        return null;\n-      }\n-    };\n-\n-    fetchData();\n-  }, []);\n-\n-  console.log(\"events\", events);\n-  return (\n-    <div className=\"grid min-h-full  gap-6  mx-0 my-16 text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(250px,1fr))]  sm:mx-6 auto-rows-min \">\n-      {events.map(event => {\n-        return <EventCard key={event.id} {...event} />;\n-      })}\n-    </div>\n-  );\n-};\n-\n-export default Homepage;\n"
                },
                {
                    "date": 1754443740855,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-import React, { useEffect, useState } from \"react\";\n import EventCard from \"../components/EventCard\";\n \n import useEvents from \"../hooks/useEvents\";\n // Fetch events (GET /api/events) and render them as cards sorted chronologically.\n"
                },
                {
                    "date": 1754444095714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,24 @@\n \n import useEvents from \"../hooks/useEvents\";\n // Fetch events (GET /api/events) and render them as cards sorted chronologically.\n const Homepage = () => {\n-  const { events, setEvents } = useEvents();\n+  const { events, isLoading, error } = useEvents();\n \n   console.log(\"events\", events);\n+  if (isLoading) {\n+    return (\n+      <div className=\"flex w-52 flex-col gap-4\">\n+        <div className=\"skeleton h-32 w-full\"></div>\n+        <div className=\"skeleton h-4 w-28\"></div>\n+        <div className=\"skeleton h-4 w-full\"></div>\n+        <div className=\"skeleton h-4 w-full\"></div>\n+      </div>\n+    );\n+  }\n+  if (error) {\n+    return <div>Error fetching data</div>;\n+  }\n   return (\n     <div className=\"grid min-h-full  gap-6  mx-0 my-16 text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(250px,1fr))]   auto-rows-min \">\n       {events.map(event => {\n         return <EventCard key={event.id} {...event} />;\n"
                },
                {
                    "date": 1754444106209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,31 @@\n+import EventCard from \"../components/EventCard\";\n+\n+import useEvents from \"../hooks/useEvents\";\n+// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n+const Homepage = () => {\n+  const { events, isLoading, error } = useEvents();\n+\n+  console.log(\"events\", events);\n+  if (isLoading) {\n+    return (\n+      <div className=\"flex w-52 flex-col gap-4\">\n+        <div className=\"skeleton h-32 w-full\"></div>\n+        <div className=\"skeleton h-4 w-28\"></div>\n+        <div className=\"skeleton h-4 w-full\"></div>\n+        <div className=\"skeleton h-4 w-full\"></div>\n+      </div>\n+    );\n+  }\n+  if (error) {\n+    return <div>Error fetching data</div>;\n+  }\n+  return (\n+    <div className=\"grid min-h-full  gap-6  mx-0 my-16 text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(250px,1fr))]   auto-rows-min \">\n+      {events.map(event => {\n+        return <EventCard key={event.id} {...event} />;\n+      })}\n+    </div>\n+  );\n+};\n+\n+export default Homepage;\n"
                },
                {
                    "date": 1754444192608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,31 @@\n+import EventCard from \"../components/EventCard\";\n+\n+import useEvents from \"../hooks/useEvents\";\n+// Fetch events (GET /api/events) and render them as cards sorted chronologically.\n+const Homepage = () => {\n+  const { events, isLoading, error } = useEvents();\n+\n+  console.log(\"events\", events);\n+  if (isLoading) {\n+    return (\n+      <div className=\"flex w-full h-full flex-col gap-4\">\n+        <div className=\"skeleton h-32 w-full\"></div>\n+        <div className=\"skeleton h-4 w-28\"></div>\n+        <div className=\"skeleton h-4 w-full\"></div>\n+        <div className=\"skeleton h-4 w-full\"></div>\n+      </div>\n+    );\n+  }\n+  if (error) {\n+    return <div>Error fetching data</div>;\n+  }\n+  return (\n+    <div className=\"grid min-h-full  gap-6  mx-0 my-16 text-gray-400 grid-cols-2 sm:grid-cols-[repeat(auto-fill,minmax(250px,1fr))]   auto-rows-min \">\n+      {events.map(event => {\n+        return <EventCard key={event.id} {...event} />;\n+      })}\n+    </div>\n+  );\n+};\n+\n+export default Homepage;\n"
                }
            ],
            "date": 1754431310373,
            "name": "Commit-0",
            "content": "import React from \"react\";\n\nconst Homepage = () => {\n  return <div>Homepage</div>;\n};\n\nexport default Homepage;\n"
        }
    ]
}